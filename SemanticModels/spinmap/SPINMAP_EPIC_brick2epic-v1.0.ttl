# baseURI: http://siemens.com/mapping/brick2epic0
# imports: http://siemens.com/functions/time-functions
# imports: http://siemens.com/schemas/kps/epic
# imports: http://siemens.com/schemas/kps/epic-building
# imports: http://siemens.com/spin/namespace_functions
# imports: http://siemens.com/spin/postMappingFix
# imports: http://topbraid.org/spin/spinmapl
# imports: http://www.siemens.com/import/brick/Brick_Building
# imports: https://brickschema.org/schema/1.0.3/Brick
# imports: https://w3id.org/saref
# prefix: brick2epic

@prefix afn: <http://jena.hpl.hp.com/ARQ/function#> .
@prefix arg: <http://spinrdf.org/arg#> .
@prefix b2e: <http://siemens.com/mapping/brick2epic#> .
@prefix bb: <http://www.siemens.com/import/brick/Brick_Building0#> .
@prefix bldg: <http://siemens.com/schemas/kps/epic-building#> .
@prefix brick: <https://brickschema.org/schema/1.0.3/Brick#> .
@prefix brick2epic: <http://siemens.com/mapping/brick2epic#> .
@prefix epic: <http://siemens.com/schemas/kps/epic#> .
@prefix namespace_functions: <http://siemens.com/spin/namespace_functions#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix saref: <https://w3id.org/saref#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spinmap: <http://spinrdf.org/spinmap#> .
@prefix spinmapl: <http://topbraid.org/spin/spinmapl#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://siemens.com/mapping/brick2epic0>
  rdf:type owl:Ontology ;
  owl:imports <http://siemens.com/functions/time-functions> ;
  owl:imports <http://siemens.com/schemas/kps/epic> ;
  owl:imports <http://siemens.com/schemas/kps/epic-building> ;
  owl:imports <http://siemens.com/spin/namespace_functions> ;
  owl:imports <http://siemens.com/spin/postMappingFix> ;
  owl:imports <http://topbraid.org/spin/spinmapl> ;
  owl:imports <http://www.siemens.com/import/brick/Brick_Building> ;
  owl:imports <https://brickschema.org/schema/1.0.3/Brick> ;
  owl:imports <https://w3id.org/saref> ;
  owl:versionInfo "Created with TopBraid Composer" ;
.
brick2epic:Building_Electrical_Meter-Meter_1
  rdf:type spinmap:Context ;
  spinmap:sourceClass <http://www.siemens.com/import/brick/Brick_Building0#Building_Electrical_Meter> ;
  spinmap:target [
      rdf:type namespace_functions:build_EPIC_URI ;
      spinmap:source spinmap:_source ;
    ] ;
  spinmap:targetClass saref:Meter ;
.
brick2epic:Building_Information-Building_1
  rdf:type spinmap:Context ;
  spinmap:sourceClass <http://www.siemens.com/import/brick/Brick_Building0#Building_Information> ;
  spinmap:target [
      rdf:type namespace_functions:build_EPIC_URI ;
      spinmap:source spinmap:_source ;
    ] ;
  spinmap:targetClass bldg:Building ;
.
brick2epic:Weather_Temperature_Sensor-TemperatureSensor
  rdf:type spinmap:Context ;
  spinmap:sourceClass <http://www.siemens.com/import/brick/Brick_Building0#Weather_Temperature_Sensor> ;
  spinmap:target [
      rdf:type namespace_functions:build_EPIC_URI ;
      spinmap:source spinmap:_source ;
    ] ;
  spinmap:targetClass saref:TemperatureSensor ;
.
spinmapl:modified_enumURI
  rdf:type spinmap:TargetFunction ;
  spin:body [
      rdf:type sp:Select ;
      sp:resultVariables (
          [
            sp:varName "result" ;
          ]
        ) ;
      sp:where (
          [
            sp:object spin:_arg2 ;
            sp:predicate spin:_arg1 ;
            sp:subject [
                sp:varName "source" ;
              ] ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type sp:iri ;
                sp:arg1 [
                    rdf:type sp:concat ;
                    sp:arg1 [
                        rdf:type spif:regex ;
                        sp:arg1 [
                            rdf:type afn:namespace ;
                            sp:arg1 [
                                sp:varName "source" ;
                              ] ;
                          ] ;
                        sp:arg2 "#" ;
                        sp:arg3 "/EPIC#" ;
                      ] ;
                    sp:arg2 [
                        rdf:type afn:localname ;
                        sp:arg1 [
                            sp:varName "source" ;
                          ] ;
                      ] ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "result" ;
              ] ;
          ]
        ) ;
    ] ;
  spin:returnType rdfs:Resource ;
  rdfs:comment "A simple function that returns the source instance itself, reusing exactly the same URIs and blank node identifiers." ;
  rdfs:label "modified_enumURI" ;
  rdfs:subClassOf spinmap:TargetFunctions ;
.
bb:Building_Information
  spinmap:rule [
      rdf:type spinmap:Mapping-0-1 ;
      spinmap:context <http://siemens.com/mapping/brick2epicBuilding_Information-Building> ;
      spinmap:expression bldg:Building ;
      spinmap:targetPredicate1 rdf:type ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context <http://siemens.com/mapping/brick2epicBuilding_Information-Building> ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 bb:resourceID ;
      spinmap:targetPredicate1 bldg:resourceID ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context <http://siemens.com/mapping/brick2epicBuilding_Information-Building> ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 bb:resourceID ;
      spinmap:targetPredicate1 bldg:resourceID ;
    ] ;
.
bb:Weather_Temperature_Sensor
  spinmap:rule [
      rdf:type spinmap:Mapping-0-1 ;
      spinmap:context <http://siemens.com/mapping/brick2epicWeather_Temperature_Sensor-TemperatureSensor> ;
      spinmap:expression saref:TemperatureSensor ;
      spinmap:targetPredicate1 rdf:type ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context <http://siemens.com/mapping/brick2epicWeather_Temperature_Sensor-TemperatureSensor> ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 bb:value ;
      spinmap:targetPredicate1 saref:IsUsedFor ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context <http://siemens.com/mapping/brick2epicWeather_Temperature_Sensor-TemperatureSensor> ;
      spinmap:expression [
          rdf:type spinmapl:resourceWithValue ;
          sp:arg1 spin:_arg1 ;
          spinmapl:predicate saref:hasValue ;
          spinmapl:type xsd:float ;
        ] ;
      spinmap:sourcePredicate1 bb:value ;
      spinmap:targetPredicate1 saref:IsUsedFor ;
    ] ;
.
<http://www.siemens.com/import/brick/Brick_Building0#Building_Electrical_Meter>
  spinmap:rule [
      rdf:type spinmap:Mapping-0-1 ;
      spinmap:context brick2epic:Building_Electrical_Meter-Meter_1 ;
      spinmap:expression saref:Meter ;
      spinmap:targetPredicate1 rdf:type ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context brick2epic:Building_Electrical_Meter-Meter_1 ;
      spinmap:expression [
          rdf:type spinmapl:resourceWithValue ;
          sp:arg1 spin:_arg1 ;
          spinmapl:predicate saref:hasValue ;
          spinmapl:type xsd:float ;
        ] ;
      spinmap:sourcePredicate1 <http://www.siemens.com/import/brick/Brick_Building0#value> ;
      spinmap:targetPredicate1 saref:IsUsedFor ;
    ] ;
.
<http://www.siemens.com/import/brick/Brick_Building0#Building_Information>
  spinmap:rule [
      rdf:type spinmap:Mapping-0-1 ;
      spinmap:context brick2epic:Building_Information-Building_1 ;
      spinmap:expression bldg:Building ;
      spinmap:targetPredicate1 rdf:type ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context brick2epic:Building_Information-Building_1 ;
      spinmap:expression spin:_arg1 ;
      spinmap:sourcePredicate1 <http://www.siemens.com/import/brick/Brick_Building0#resourceID> ;
      spinmap:targetPredicate1 bldg:resourceID ;
    ] ;
.
<http://www.siemens.com/import/brick/Brick_Building0#Weather_Temperature_Sensor>
  spinmap:rule [
      rdf:type spinmap:Mapping-0-1 ;
      spinmap:context brick2epic:Weather_Temperature_Sensor-TemperatureSensor ;
      spinmap:expression saref:TemperatureSensor ;
      spinmap:targetPredicate1 rdf:type ;
    ] ;
  spinmap:rule [
      rdf:type spinmap:Mapping-1-1 ;
      spinmap:context brick2epic:Weather_Temperature_Sensor-TemperatureSensor ;
      spinmap:expression [
          rdf:type spinmapl:resourceWithValue ;
          sp:arg1 spin:_arg1 ;
          spinmapl:predicate saref:hasValue ;
          spinmapl:type xsd:float ;
        ] ;
      spinmap:sourcePredicate1 <http://www.siemens.com/import/brick/Brick_Building0#value> ;
      spinmap:targetPredicate1 saref:IsUsedFor ;
    ] ;
.
