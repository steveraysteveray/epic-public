# baseURI: http://siemens.com/schemas/eqnsandalgs
# prefix: alg

@prefix alg: <http://siemens.com/schemas/eqnsandalgs#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://siemens.com/schemas/eqnsandalgs>
  rdf:type owl:Ontology ;
  dc:creator "Jack Hodges"^^xsd:string ;
  dc:description "Ontology for Equations and Algorithms"^^xsd:string ;
  dc:title "Equations and Algorithms Ontology"^^xsd:string ;
  dc:subject "Equations and Algorithms models"^^xsd:string ;
  vaem:hasGraphRole vaem:SchemaGraph ;
  vaem:intent "This ontology provides a baseline for representing equations and algorithms."^^xsd:string ;
  vaem:namespace "http://siemens.com/schemas/eqnsandalgs#"^^xsd:string ;
  vaem:namespacePrefix "alg"^^xsd:string ;
  vaem:url "http://siemens.com/schemas/eqnsandalgs"^^xsd:anyURI ;
  rdfs:label "Equations and Algorithms Ontology"^^xsd:string ;
  owl:versionInfo "$Id: SCHEMA_SSF_equations_and_algorithms-v1.0.ttl 1954 2018-08-22 13:35:02Z jhodges $"^^xsd:string ;
.
alg:ANDOperation
  rdf:type owl:Class ;
  dc:description "The && operator specifies the Boolean AND evaluation of its integer operands. If either operand references an invalid VARIABLE (VALIDITY equal to FALSE), the operand shall evaluate to 0. The result of this type of expression is 1 if both of the operands are not equal to 0; otherwise, the result is 0. If the first operand is equal to 0, the second operand is not evaluated."^^xsd:string ;
  alg:operationSymbol "&&"^^xsd:string ;
  rdfs:label "AND (conjunction) Operation"^^xsd:string ;
  rdfs:subClassOf alg:LogicalBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#38;&#38;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u0026u0026"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
.
alg:AdditionAdditiveOperation
  rdf:type owl:Class ;
  alg:operationSymbol "+"^^xsd:string ;
  rdfs:label "Addition Additive Operation"^^xsd:string ;
  rdfs:subClassOf alg:AdditiveBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#43;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u002b"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  skos:prefLabel "Addition Additive Operation"^^xsd:string ;
.
alg:AdditiveAssignment
  rdf:type owl:Class ;
  alg:operationSymbol "+="^^xsd:string ;
  rdfs:label "Additive assignment"^^xsd:string ;
  rdfs:subClassOf alg:ArithmeticAssignment ;
.
alg:AdditiveBinaryOperation
  rdf:type owl:Class ;
  dc:description """Additive operators specify the addition and subtraction of numerical operands. If this operator is applied on numerical operands, then the result is the sum of its two operands, and the operation is commutative. If the + operator is applied on string operands, then the result is a string value generated by appending the second string to the first string, and the operation is not commutative.

The minus operator indicates a subtraction. The resulting value of this operation is the difference of its operands. The second operand is subtracted from the first. Table 278 specifies the additive operators."""^^xsd:string ;
  alg:operationSymbol "+"^^xsd:string ;
  rdfs:label "Addition Binary Operation"^^xsd:string ;
  rdfs:subClassOf alg:ArithmeticOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#43;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u002b"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  skos:prefLabel "Addition Binary Operation"^^xsd:string ;
.
alg:AdditiveIdentity
  rdf:type owl:Class ;
  rdfs:label "Additive identity"^^xsd:string ;
  rdfs:subClassOf alg:Constant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue 0 ;
      owl:onProperty alg:aoValue ;
    ] ;
  skos:prefLabel "Additive identity"^^xsd:string ;
.
alg:AlgebraicFunction
  rdf:type owl:Class ;
  rdfs:label "Algebraic function"^^xsd:string ;
  rdfs:subClassOf alg:Function ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue 0 ;
      owl:onProperty alg:power ;
    ] ;
  skos:prefLabel "Algebraic function"^^xsd:string ;
.
alg:Algorithm
  rdf:type owl:Class ;
  dc:description "An algorithm defines a method to solve a mathematical or logical problem."^^xsd:string ;
  rdfs:label "Algorithm"^^xsd:string ;
  rdfs:subClassOf <http://www.w3.org/ns/prov#Entity> ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minCardinality 1 ;
      owl:onProperty alg:algorithmicExpression ;
    ] ;
  skos:prefLabel "Algorithm"^^xsd:string ;
.
alg:AlgorithmExpression
  rdf:type owl:Class ;
  dc:description """An expression is a combination of operations on objects. Here are cases:

    AlgorithmObject (literal): A as value, such as 5
    AlgorithmObject (constant): A as value, such as PI = 3.14157
    AlgorithmObject (variable): A as name, type, and value
    AlgorithmObject (expression): An Expression"""^^xsd:string ;
  rdfs:label "Algorithm Expression"^^xsd:string ;
  rdfs:subClassOf <http://www.w3.org/ns/prov#Entity> ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:expressionType ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:symbolicExpression ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minCardinality "0"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:algorithmObject ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minCardinality "0"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:objectOperation ;
    ] ;
  skos:prefLabel "Algorithm Expression"^^xsd:string ;
.
alg:AlgorithmObject
  rdf:type owl:Class ;
  rdf:type sh:Shape ;
  dc:description "An algorithm object is a manipulable element of an expression."^^xsd:string ;
  rdfs:label "Algorithm Object"^^xsd:string ;
  rdfs:subClassOf <http://www.w3.org/ns/prov#Entity> ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:aoValue ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:objectSymbol ;
    ] ;
  skos:prefLabel "Algorithm Object"^^xsd:string ;
  sh:property [
      sh:datatype xsd:decimal ;
      sh:description "Algorithm objects must have a value"^^xsd:string ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "ao value"^^xsd:string ;
      sh:predicate alg:aoValue ;
    ] ;
.
alg:AlgorithmOperation
  rdf:type owl:Class ;
  dc:description "An operation modifies expression elements."^^xsd:string ;
  rdfs:label "Algorithm Operation"^^xsd:string ;
  rdfs:subClassOf <http://www.w3.org/ns/prov#Entity> ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality 1 ;
      owl:onProperty alg:algorithmicSymbol ;
    ] ;
  skos:prefLabel "Algorithm Operation"^^xsd:string ;
.
alg:ArithmeticAssignment
  rdf:type owl:Class ;
  rdfs:label "Arithmetic assignment"^^xsd:string ;
  rdfs:subClassOf alg:AssignmentOperation ;
.
alg:ArithmeticNegation
  rdf:type owl:Class ;
  dc:description "Arithmetic negation of its operand."^^xsd:string ;
  alg:operationSymbol "-"^^xsd:string ;
  rdfs:label "Arithmetic Negation"^^xsd:string ;
  rdfs:subClassOf alg:UnaryOperation ;
.
alg:ArithmeticOperation
  rdf:type owl:Class ;
  dc:description "An arithmetic operation modifies arithmetic expression elements arithmetically."^^xsd:string ;
  rdfs:label "Arithmetic Operation"^^xsd:string ;
  rdfs:subClassOf alg:BinaryOperation ;
  skos:prefLabel "Arithmetic Operation"^^xsd:string ;
.
alg:Assignment
  rdf:type owl:Class ;
  alg:operationSymbol "="^^xsd:string ;
  rdfs:comment "Assignment is used in the definition of equations"^^xsd:string ;
  rdfs:label "Assignment"^^xsd:string ;
  rdfs:subClassOf alg:AssignmentOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#61;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u003d"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
.
alg:AssignmentOperation
  rdf:type owl:Class ;
  rdfs:label "Assignment operation"^^xsd:string ;
  rdfs:subClassOf alg:AlgorithmOperation ;
.
alg:BANDOperation
  rdf:type owl:Class ;
  dc:description "The & operator specifies the bitwise AND of its integer operands, that is, each bit of the result is set if each of the corresponding bits of the operands is set. The operands of the & operator shall have integral values."^^xsd:string ;
  alg:operationSymbol "&"^^xsd:string ;
  rdfs:label "BAND (bitwise AND) Operation"^^xsd:string ;
  rdfs:subClassOf alg:LogicalBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#38;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u0026"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
.
alg:BOROperation
  rdf:type owl:Class ;
  dc:description "The | operator specifies the bitwise inclusive OR of its integer operands, that is, each bit of the result is set if either of the corresponding bits of the operands is set. The operands of the | operator shall have integral values."^^xsd:string ;
  alg:operationSymbol "|"^^xsd:string ;
  rdfs:label "BOR (bitwise OR) Operation"^^xsd:string ;
  rdfs:subClassOf alg:LogicalBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#124;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u0007c"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
.
alg:BinaryObjectOperationPair
  rdf:type owl:Class ;
  rdfs:label "Binary Object Operation Pair"^^xsd:string ;
  rdfs:subClassOf alg:ObjectOperationPair ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom alg:BinaryOperation ;
      owl:onProperty alg:algorithmOperation ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:algorithmOperation ;
    ] ;
  skos:prefLabel "Binary Object Operation Pair"^^xsd:string ;
.
alg:BinaryOperation
  rdf:type owl:Class ;
  dc:description """A binary expression consists of two operands or expressions, separated by a binary operator. If either operand has a floating-point value, the other operand is converted (promoted) to a floating-point value. The following types of binary expressions are specified:

<UL>
    <LI>Multiplicative
    <LI>Additive
    <LI>Shift
    <LI>Relational
    <LI>Equality
    <LI>Bitwise AND (&)
    <LI>Bitwise XOR (^)
    <LI>Bitwise OR ( | )
    <LI>Logical AND (&&)
    <LI>Logical OR ( || )
    <LI>Conditional evaluation
</UL>"""^^xsd:string ;
  dc:description "A binary operation modifies binary expression elements."^^xsd:string ;
  rdfs:label "Binary Operation"^^xsd:string ;
  rdfs:subClassOf alg:AlgorithmOperation ;
  skos:prefLabel "Binary Operation"^^xsd:string ;
.
alg:BitwiseNegation
  rdf:type owl:Class ;
  dc:description "Bitwise negation of its operand, that is, each bit of the result is the inverse of the corresponding bit of the operand. The operand of the ~ operator shall have an integral value."^^xsd:string ;
  alg:operationSymbol "~"^^xsd:string ;
  rdfs:label "Bitwise Negation"^^xsd:string ;
  rdfs:subClassOf alg:UnaryOperation ;
.
alg:Constant
  rdf:type owl:Class ;
  dc:description "A constant is an object that can take a single value."^^xsd:string ;
  rdfs:label "Constant"^^xsd:string ;
  rdfs:subClassOf alg:AlgorithmObject ;
  skos:prefLabel "Constant"^^xsd:string ;
.
alg:DivisionMultiplicativeOperation
  rdf:type owl:Class ;
  dc:description "A division multiplicative operation divides arithmetic expression elements."^^xsd:string ;
  alg:operationSymbol "/"^^xsd:string ;
  rdfs:label "Division Multiplicative Operation"^^xsd:string ;
  rdfs:subClassOf alg:MultiplicativeBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#47;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u002f"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  skos:prefLabel "Division Multiplicative Operation"^^xsd:string ;
.
alg:DivisiveAssignment
  rdf:type owl:Class ;
  alg:operationSymbol "/="^^xsd:string ;
  rdfs:label "Divisive assignment"^^xsd:string ;
  rdfs:subClassOf alg:ArithmeticAssignment ;
.
alg:EqualEqualityOperation
  rdf:type owl:Class ;
  dc:description "Tests for the relationship “equals“."^^xsd:string ;
  alg:operationSymbol "=="^^xsd:string ;
  rdfs:label "Equal Equality Operation"^^xsd:string ;
  rdfs:subClassOf alg:EqualityBinaryOperation ;
  skos:prefLabel "Equal Equality Operation"^^xsd:string ;
.
alg:EqualityBinaryOperation
  rdf:type owl:Class ;
  rdfs:label "Equality Binary Operation"^^xsd:string ;
  rdfs:subClassOf alg:BinaryOperation ;
  skos:prefLabel "Equality Binary Operation"^^xsd:string ;
.
alg:Equation
  rdf:type owl:Class ;
  dc:description "An equation is a statement of equality, generally comprising a function definition as a parametized expression. For example, F(x,y) = x + y, where x and y are parameters."^^xsd:string ;
  rdfs:label "Equation"^^xsd:string ;
  rdfs:subClassOf <http://www.w3.org/ns/prov#Entity> ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:assignFrom ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:assignTo ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:assignment ;
    ] ;
  owl:sameAs alg:FunctionExpression ;
  skos:prefLabel "Equation"^^xsd:string ;
.
alg:ExponentialFunction
  rdf:type owl:Class ;
  rdfs:label "Exponential function"^^xsd:string ;
  rdfs:subClassOf alg:Function ;
  skos:prefLabel "Exponential function"^^xsd:string ;
.
alg:FractionalPowerOperation
  rdf:type owl:Class ;
  rdfs:label "Fractional Power Operation"^^xsd:string ;
  rdfs:subClassOf alg:PowerMultiplicativeOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:fractionalExponent ;
    ] ;
  skos:prefLabel "Fractional Power Operation"^^xsd:string ;
.
alg:Function
  rdf:type owl:Class ;
  rdfs:label "Function"^^xsd:string ;
  rdfs:subClassOf <http://www.w3.org/ns/prov#Entity> ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:functionDeclaration ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:functionExpression ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:power ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:implements ;
    ] ;
  skos:prefLabel "Function"^^xsd:string ;
.
alg:FunctionDeclaration
  rdf:type owl:Class ;
  dc:description "A function declaration is a combination of variables."^^xsd:string ;
  alg:objectSymbol "F()"^^xsd:string ;
  rdfs:label "Function Declaration"^^xsd:string ;
  rdfs:subClassOf <http://www.w3.org/ns/prov#Entity> ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:functionName ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#402;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u0192"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:functionArgument ;
    ] ;
  owl:sameAs alg:Equation ;
  skos:prefLabel "Function Declaration"^^xsd:string ;
.
alg:FunctionExpression
  rdf:type owl:Class ;
  dc:description "A function is the parametized expression on the RHS of a function declaration. For example, F(x,y) = x + y, where x and y are parameters."^^xsd:string ;
  rdfs:label "Function Expression"^^xsd:string ;
  rdfs:subClassOf <http://www.w3.org/ns/prov#Entity> ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:algorithmExpression ;
    ] ;
  owl:sameAs alg:Equation ;
  skos:prefLabel "Function Expression"^^xsd:string ;
.
alg:GreaterThanEqualRelationalOperation
  rdf:type owl:Class ;
  alg:operationSymbol ">="^^xsd:string ;
  rdfs:label "Greater Than Equal Relational Operation"^^xsd:string ;
  rdfs:subClassOf alg:RelationalBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#8805;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u02265"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  skos:prefLabel "Greater Than Equal Relational Operation"^^xsd:string ;
.
alg:GreaterThanRelationalOperation
  rdf:type owl:Class ;
  alg:operationSymbol ">"^^xsd:string ;
  rdfs:label "Greater Than Relational Operation"^^xsd:string ;
  rdfs:subClassOf alg:RelationalBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#62;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u0003e"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  skos:prefLabel "Greater Than Relational Operation"^^xsd:string ;
.
alg:IfExpression
  rdf:type owl:Class ;
  rdfs:label "If expression"^^xsd:string ;
  rdfs:subClassOf alg:AlgorithmExpression ;
  skos:prefLabel "If expression"^^xsd:string ;
.
alg:InversePowerOperation
  rdf:type owl:Class ;
  rdfs:label "Inverse Power Operation"^^xsd:string ;
  rdfs:subClassOf alg:PowerMultiplicativeOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:negativeExponent ;
    ] ;
  skos:prefLabel "Inverse Power Operation"^^xsd:string ;
.
alg:LeftShiftOperation
  rdf:type owl:Class ;
  dc:description "The first operand to the left. The bits shifted off are discarded, and the vacated bits are zero filled."^^xsd:string ;
  alg:operationSymbol "-"^^xsd:string ;
  rdfs:label "Left Shift Operation"^^xsd:string ;
  rdfs:subClassOf alg:ShiftBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#45;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u00ab"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  skos:prefLabel "Left Shift Operation"^^xsd:string ;
.
alg:LessThanEqualRelationalOperation
  rdf:type owl:Class ;
  alg:operationSymbol "<="^^xsd:string ;
  rdfs:label "Less Than Equal Relational Operation"^^xsd:string ;
  rdfs:subClassOf alg:RelationalBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#8804;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u02264"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  skos:prefLabel "Less Than Equal Relational Operation"^^xsd:string ;
.
alg:LessThanRelationalOperation
  rdf:type owl:Class ;
  alg:operationSymbol "<"^^xsd:string ;
  rdfs:label "Less Than Relational Operation"^^xsd:string ;
  rdfs:subClassOf alg:RelationalBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#620;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u0003c"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  skos:prefLabel "Less Than Relational Operation"^^xsd:string ;
.
alg:LogicalBinaryOperation
  rdf:type owl:Class ;
  dc:description "A logical operation modifies logical expression elements logically."^^xsd:string ;
  rdfs:label "Logical Binary Operation"^^xsd:string ;
  rdfs:subClassOf alg:BinaryOperation ;
  skos:prefLabel "Logical Binary Operation"^^xsd:string ;
.
alg:LogicalNegation
  rdf:type owl:Class ;
  dc:description "Logical negation of its operand."^^xsd:string ;
  alg:operationSymbol "!"^^xsd:string ;
  rdfs:label "Logical Negation"^^xsd:string ;
  rdfs:subClassOf alg:UnaryOperation ;
.
alg:LogicalObjectOperationPair
  rdf:type owl:Class ;
  rdfs:label "Logical object operation pair"^^xsd:string ;
  rdfs:subClassOf alg:ObjectOperationPair ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom alg:LogicalBinaryOperation ;
      owl:onProperty alg:algorithmOperation ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:algorithmOperation ;
    ] ;
  skos:prefLabel "Logical object operation pair"^^xsd:string ;
.
alg:ModuloAssignment
  rdf:type owl:Class ;
  alg:operationSymbol "%="^^xsd:string ;
  rdfs:label "Modulo assignment"^^xsd:string ;
  rdfs:subClassOf alg:ArithmeticAssignment ;
.
alg:ModuloMultiplicativeOperation
  rdf:type owl:Class ;
  dc:description "A modulo multiplicative operation provides the remainder of integer division."^^xsd:string ;
  alg:operationSymbol "%"^^xsd:string ;
  rdfs:label "Modulo Multiplicative Operation"^^xsd:string ;
  rdfs:subClassOf alg:MultiplicativeBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#37;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u0025"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  skos:prefLabel "Modulo Multiplicative Operation"^^xsd:string ;
.
alg:MultiplicationMultiplicativeOperation
  rdf:type owl:Class ;
  dc:description "A multiplication multiplicative operation multiplies arithmetic expression elements."^^xsd:string ;
  alg:operationSymbol "x"^^xsd:string ;
  rdfs:label "Multiplication Multiplicative Operation"^^xsd:string ;
  rdfs:subClassOf alg:MultiplicativeBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#42;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u002a"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  skos:prefLabel "Multiplication Multiplicative Operation"^^xsd:string ;
.
alg:MultiplicativeAssignment
  rdf:type owl:Class ;
  alg:operationSymbol "*="^^xsd:string ;
  rdfs:label "Multiplicative assignment"^^xsd:string ;
  rdfs:subClassOf alg:ArithmeticAssignment ;
.
alg:MultiplicativeBinaryOperation
  rdf:type owl:Class ;
  dc:description "Multiplicative operators specify the multiplication and division of operands. Table 277 specifies the multiplicative operators."^^xsd:string ;
  rdfs:label "Multiplicative Binary Operation"^^xsd:string ;
  rdfs:subClassOf alg:ArithmeticOperation ;
  skos:prefLabel "Multiplicative Binary Operation"^^xsd:string ;
.
alg:MultiplicativeIdentity
  rdf:type owl:Class ;
  rdfs:label "Additive identity"^^xsd:string ;
  rdfs:subClassOf alg:Constant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue 1 ;
      owl:onProperty alg:aoValue ;
    ] ;
  skos:prefLabel "Additive identity"^^xsd:string ;
.
alg:NOROperation
  rdf:type owl:Class ;
  alg:operationSymbol "V"^^xsd:string ;
  rdfs:label "NOR (not or) Operation"^^xsd:string ;
  rdfs:subClassOf alg:LogicalBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#8893;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u22bd"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
.
alg:NOTOperation
  rdf:type owl:Class ;
  alg:operationSymbol "~"^^xsd:string ;
  rdfs:label "NOT (negation) Operation"^^xsd:string ;
  rdfs:subClassOf alg:LogicalBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#8764;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u223c"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
.
alg:NamedConstant
  rdf:type owl:Class ;
  rdf:type sh:Shape ;
  rdfs:label "Named constant"^^xsd:string ;
  rdfs:subClassOf alg:Constant ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:aoIdentifier ;
    ] ;
  skos:prefLabel "Named constant"^^xsd:string ;
  sh:property [
      sh:datatype xsd:string ;
      sh:description "There must be an identifier for a named constant"^^xsd:string ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "ao identifier"^^xsd:string ;
      sh:predicate alg:aoIdentifier ;
    ] ;
.
alg:NotEqualEqualityOperation
  rdf:type owl:Class ;
  alg:operationSymbol "!="^^xsd:string ;
  rdfs:label "Not Equal Equality Operation"^^xsd:string ;
  rdfs:subClassOf alg:EqualityBinaryOperation ;
  skos:prefLabel "Not Equal Equality Operation"^^xsd:string ;
.
alg:NumericObjectOperationPair
  rdf:type owl:Class ;
  rdfs:label "Numeric object operation pair"^^xsd:string ;
  rdfs:subClassOf alg:ObjectOperationPair ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:algorithmOperation ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty alg:algorithmOperation ;
      owl:someValuesFrom alg:AdditiveBinaryOperation ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:onProperty alg:algorithmOperation ;
      owl:someValuesFrom alg:MultiplicativeBinaryOperation ;
    ] ;
  skos:prefLabel "Numeric object operation pair"^^xsd:string ;
.
alg:OROperation
  rdf:type owl:Class ;
  dc:description "The || operator specifies the Boolean OR evaluation of its integer operands. If either operand references an invalid VARIABLE (VALIDITY equal to FALSE), the operand shall evaluate to 0. The result of this type of expression is 1 if either of the operands is not equal to 0; otherwise, the result is 0. If the first operand is not equal to 0, the second operand is not evaluated."^^xsd:string ;
  alg:operationSymbol "||"^^xsd:string ;
  rdfs:label "OR (disjunction) Operation"^^xsd:string ;
  rdfs:subClassOf alg:LogicalBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#8422;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u20e6"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
.
alg:ObjectOperation
  rdf:type owl:Class ;
  rdfs:label "Object operation"^^xsd:string ;
  rdfs:subClassOf <http://www.w3.org/ns/prov#Entity> ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:algorithmObject ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:algorithmOperation ;
    ] ;
  skos:prefLabel "Object operation"^^xsd:string ;
.
alg:ObjectOperationPair
  rdf:type owl:Class ;
  dc:description "A [+ B], where A and B can be a literal, a constant, a variable, or an expression, and where + is the operaton."^^xsd:string ;
  rdfs:label "Object operation pair"^^xsd:string ;
  rdfs:subClassOf <http://www.w3.org/ns/prov#Entity> ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:algorithmOperation ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:maxCardinality "2"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:algorithmObject ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:minCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:algorithmObject ;
    ] ;
  skos:prefLabel "Object operation pair"^^xsd:string ;
.
alg:PolynomialFunction
  rdf:type owl:Class ;
  rdfs:label "Polynomial function"^^xsd:string ;
  rdfs:subClassOf alg:Function ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom [
          rdf:type rdfs:Datatype ;
          owl:onDatatype xsd:int ;
          owl:withRestrictions (
              [
                xsd:minInclusive "2"^^xsd:int ;
              ]
            ) ;
        ] ;
      owl:onProperty alg:power ;
    ] ;
  skos:prefLabel "Polynomial function"^^xsd:string ;
.
alg:PowerMultiplicativeOperation
  rdf:type owl:Class ;
  alg:objectSymbol "^"^^xsd:string ;
  rdfs:label "Power Multiplicative Operation"^^xsd:string ;
  rdfs:subClassOf alg:MultiplicativeBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:exponent ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#94;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u005e"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  skos:prefLabel "Power Multiplicative Operation"^^xsd:string ;
.
alg:QuadraticFunction
  rdf:type owl:Class ;
  rdfs:label "Quadratic function"^^xsd:string ;
  rdfs:subClassOf alg:PolynomialFunction ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue 2 ;
      owl:onProperty alg:power ;
    ] ;
  skos:prefLabel "Quadratic function"^^xsd:string ;
.
alg:RelationalBinaryOperation
  rdf:type owl:Class ;
  dc:description "Relational operators (<, <=, >, >=) specify a comparison of its operands. The result of this type of expression is 1 if the tested relationship is true; otherwise, the result is 0. The operands shall be numerical data types. Table 280 specifies the relational operators."^^xsd:string ;
  rdfs:label "Relational Binary Operation"^^xsd:string ;
  rdfs:subClassOf alg:BinaryOperation ;
  skos:prefLabel "Relational Binary Operation"^^xsd:string ;
.
alg:RightShiftOperation
  rdf:type owl:Class ;
  dc:description "The first operand to the right. The bits shifted off are discarded, and the vacated bits are zero filled."^^xsd:string ;
  alg:operationSymbol "-"^^xsd:string ;
  rdfs:label "Right Shift Operation"^^xsd:string ;
  rdfs:subClassOf alg:ShiftBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#187;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u00bb"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  skos:prefLabel "Right Shift Operation"^^xsd:string ;
.
alg:ShiftBinaryOperation
  rdf:type owl:Class ;
  dc:description "The << and >> operators specify a shift of the first operand by the number of bits specified by the second operand. The operands of the << and >> operators shall have integer values. Table 279 specifies the shift operators."^^xsd:string ;
  rdfs:label "Shift Binary Operation"^^xsd:string ;
  rdfs:subClassOf alg:BinaryOperation ;
  skos:prefLabel "Shift Binary Operation"^^xsd:string ;
.
alg:SubtractionAdditiveOperation
  rdf:type owl:Class ;
  dc:description "A subtraction additive operation subtracts arithmetic expression elements."^^xsd:string ;
  alg:operationSymbol "-"^^xsd:string ;
  rdfs:label "Subtraction Additive Operation"^^xsd:string ;
  rdfs:subClassOf alg:AdditiveBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#45;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u002d"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
  skos:prefLabel "Subtraction Additive Operation"^^xsd:string ;
.
alg:SubtractiveAssignment
  rdf:type owl:Class ;
  alg:operationSymbol "-="^^xsd:string ;
  rdfs:label "Subtractive assignment"^^xsd:string ;
  rdfs:subClassOf alg:ArithmeticAssignment ;
.
alg:UnaryObjectOperation
  rdf:type owl:Class ;
  rdfs:label "Unary object operation"^^xsd:string ;
  rdfs:subClassOf alg:ObjectOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:allValuesFrom alg:UnaryOperation ;
      owl:onProperty alg:algorithmOperation ;
    ] ;
  skos:prefLabel "Unary object operation"^^xsd:string ;
.
alg:UnaryOperation
  rdf:type owl:Class ;
  rdfs:label "Unary operation"^^xsd:string ;
  rdfs:subClassOf alg:AlgorithmOperation ;
  skos:prefLabel "Unary operation"^^xsd:string ;
.
alg:Variable
  rdf:type owl:Class ;
  rdf:type sh:Shape ;
  dc:description "A variable is an object that can take on multiple values."^^xsd:string ;
  rdfs:label "Variable"^^xsd:string ;
  rdfs:subClassOf alg:AlgorithmObject ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:aoIdentifier ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:cardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:aoType ;
    ] ;
  skos:prefLabel "Variable"^^xsd:string ;
  sh:property [
      sh:datatype xsd:string ;
      sh:description "A variable must have an identifier"^^xsd:string ;
      sh:maxCount 1 ;
      sh:minCount 1 ;
      sh:name "ao identifier"^^xsd:string ;
      sh:predicate alg:aoIdentifier ;
    ] ;
.
alg:XOROperation
  rdf:type owl:Class ;
  alg:operationSymbol "^"^^xsd:string ;
  rdfs:label "XOR (exclusive or) Operation"^^xsd:string ;
  rdfs:subClassOf alg:LogicalBinaryOperation ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "&#8891;"^^xsd:string ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:subClassOf [
      rdf:type owl:Restriction ;
      owl:hasValue "u22bb"^^xsd:string ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
.
alg:algorithmExpression
  rdf:type owl:ObjectProperty ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:unionOf (
          alg:Algorithm
          alg:FunctionExpression
        ) ;
    ] ;
  rdfs:label "algorithm expression"^^xsd:string ;
  rdfs:range alg:AlgorithmExpression ;
.
alg:algorithmObject
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:Algorithm ;
  rdfs:label "algorithm object"^^xsd:string ;
  rdfs:range [
      rdf:type owl:Class ;
      owl:unionOf (
          alg:AlgorithmObject
          alg:AlgorithmExpression
        ) ;
    ] ;
.
alg:algorithmOperation
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:Algorithm ;
  rdfs:label "algorithm operation"^^xsd:string ;
  rdfs:range [
      rdf:type owl:Class ;
      owl:unionOf (
          alg:AlgorithmOperation
          alg:AlgorithmExpression
        ) ;
    ] ;
.
alg:algorithmicSymbol
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:AlgorithmOperation ;
  rdfs:label "algorithmic symbol"^^xsd:string ;
  rdfs:range <http://qudt.org/schema/qudt#Symbol> ;
  rdfs:range [
      rdf:type owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:htmlSymbol ;
    ] ;
  rdfs:range [
      rdf:type owl:Restriction ;
      owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
      owl:onProperty alg:unicodeSymbol ;
    ] ;
.
alg:aoIdentifier
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:Variable ;
  rdfs:label "identifier"^^xsd:string ;
  rdfs:range xsd:string ;
  skos:prefLabel "identifier"^^xsd:string ;
.
alg:aoOperand
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:AlgorithmObject ;
  rdfs:label "value"^^xsd:string ;
  rdfs:range [
      rdf:type owl:Class ;
      owl:unionOf (
          alg:Constant
          alg:NamedConstant
          alg:Variable
          alg:AlgorithmExpression
        ) ;
    ] ;
  skos:prefLabel "value"^^xsd:string ;
.
alg:aoOperand1
  rdf:type owl:ObjectProperty ;
  rdfs:label "ao operand1"^^xsd:string ;
  rdfs:subPropertyOf alg:aoOperand ;
  skos:prefLabel "ao operand1"^^xsd:string ;
.
alg:aoOperand2
  rdf:type owl:ObjectProperty ;
  rdfs:label "ao operand2"^^xsd:string ;
  rdfs:subPropertyOf alg:aoOperand ;
  skos:prefLabel "ao operand2"^^xsd:string ;
.
alg:aoType
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:Variable ;
  rdfs:label "value"^^xsd:string ;
  rdfs:range <http://qudt.org/schema/qudt#Datatype> ;
  skos:prefLabel "value"^^xsd:string ;
.
alg:aoValue
  rdf:type owl:DatatypeProperty ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:unionOf (
          alg:Constant
          alg:Variable
        ) ;
    ] ;
  rdfs:label "value"^^xsd:string ;
  rdfs:range <http://qudt.org/schema/qudt#numericUnion> ;
  skos:prefLabel "value"^^xsd:string ;
.
alg:assignFrom
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:Equation ;
  rdfs:label "assign from"^^xsd:string ;
  rdfs:range alg:FunctionExpression ;
.
alg:assignTo
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:Equation ;
  rdfs:label "algorithm object"^^xsd:string ;
  rdfs:range alg:FunctionDeclaration ;
.
alg:assignment
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:Equation ;
  rdfs:label "assignment"^^xsd:string ;
  rdfs:range alg:Assignment ;
.
alg:binaryOperation
  rdf:type owl:ObjectProperty ;
  rdfs:label "binary operation"^^xsd:string ;
  rdfs:range alg:BinaryOperation ;
  rdfs:subPropertyOf alg:algorithmOperation ;
  skos:prefLabel "binary operation"^^xsd:string ;
.
alg:booleanExpressionType
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:AlgorithmExpression ;
  rdfs:label "boolean expression type"^^xsd:string ;
  rdfs:range xsd:boolean ;
  rdfs:subPropertyOf alg:expressionType ;
  skos:prefLabel "boolean expression type"^^xsd:string ;
.
alg:doubleExpressionType
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:AlgorithmExpression ;
  rdfs:label "double expression type"^^xsd:string ;
  rdfs:range xsd:double ;
  rdfs:subPropertyOf alg:expressionType ;
  skos:prefLabel "double expression type"^^xsd:string ;
.
alg:exponent
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:PowerMultiplicativeOperation ;
  rdfs:label "exponent"^^xsd:string ;
  rdfs:range xsd:int ;
.
alg:expressionType
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:AlgorithmExpression ;
  rdfs:label "expression type"^^xsd:string ;
  rdfs:range [
      rdf:type owl:Class ;
      owl:unionOf (
          xsd:string
          xsd:boolean
          xsd:float
          xsd:double
          xsd:integer
          xsd:token
          xsd:unsignedInt
        ) ;
    ] ;
.
alg:floatExpressionType
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:AlgorithmExpression ;
  rdfs:label "float integer expression type"^^xsd:string ;
  rdfs:range xsd:float ;
  rdfs:subPropertyOf alg:expressionType ;
  skos:prefLabel "float expression type"^^xsd:string ;
.
alg:fractionalExponent
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:FractionalPowerOperation ;
  rdfs:label "fractional exponent"^^xsd:string ;
  rdfs:range [
      rdf:type rdfs:Datatype ;
      owl:onDatatype xsd:int ;
      owl:withRestrictions (
          [
            xsd:minExclusive "0"^^xsd:int ;
          ]
          [
            xsd:maxExclusive "1"^^xsd:int ;
          ]
        ) ;
    ] ;
  rdfs:subPropertyOf alg:exponent ;
  skos:prefLabel "fractional exponent"^^xsd:string ;
.
alg:functionArgument
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:FunctionDeclaration ;
  rdfs:label "argument"^^xsd:string ;
  rdfs:range alg:Variable ;
.
alg:functionDeclaration
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:Function ;
  rdfs:label "function declaration"^^xsd:string ;
  rdfs:range alg:FunctionDeclaration ;
.
alg:functionExpression
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:Function ;
  rdfs:label "function expression"^^xsd:string ;
  rdfs:range alg:FunctionExpression ;
.
alg:functionName
  rdf:type owl:ObjectProperty ;
  alg:objectSymbol "f"^^xsd:string ;
  rdfs:domain alg:FunctionDeclaration ;
  rdfs:label "function name"^^xsd:string ;
  rdfs:range <http://qudt.org/schema/qudt#Symbol> ;
.
alg:htmlSymbol
  rdf:type owl:DatatypeProperty ;
  rdfs:label "html symbol"^^xsd:string ;
  rdfs:range xsd:string ;
  rdfs:subPropertyOf alg:objectSymbol ;
  skos:prefLabel "html symbol"^^xsd:string ;
.
alg:implements
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:Function ;
  rdfs:label "implements"^^xsd:string ;
  rdfs:range alg:Algorithm ;
.
alg:intExpressionType
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:AlgorithmExpression ;
  rdfs:label "integer expression type"^^xsd:string ;
  rdfs:range xsd:integer ;
  rdfs:subPropertyOf alg:expressionType ;
  skos:prefLabel "integer expression type"^^xsd:string ;
.
alg:logicalOperation
  rdf:type owl:ObjectProperty ;
  rdfs:label "logical operation"^^xsd:string ;
  rdfs:range alg:LogicalBinaryOperation ;
  rdfs:subPropertyOf alg:algorithmOperation ;
  skos:prefLabel "logical operation"^^xsd:string ;
.
alg:negativeExponent
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:InversePowerOperation ;
  rdfs:label "negative exponent"^^xsd:string ;
  rdfs:range [
      rdf:type rdfs:Datatype ;
      owl:onDatatype xsd:int ;
      owl:withRestrictions (
          [
            xsd:maxExclusive "0"^^xsd:int ;
          ]
        ) ;
    ] ;
  rdfs:subPropertyOf alg:exponent ;
  skos:prefLabel "negative exponent"^^xsd:string ;
.
alg:numericOperation
  rdf:type owl:ObjectProperty ;
  rdfs:label "numeric operation"^^xsd:string ;
  rdfs:range alg:ArithmeticOperation ;
  rdfs:subPropertyOf alg:algorithmOperation ;
  skos:prefLabel "numeric operation"^^xsd:string ;
.
alg:objectOperation
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:AlgorithmExpression ;
  rdfs:label "object operation"^^xsd:string ;
  rdfs:range alg:ObjectOperation ;
.
alg:objectOperationPair
  rdf:type owl:ObjectProperty ;
  rdfs:domain alg:AlgorithmExpression ;
  rdfs:label "object operation pair"^^xsd:string ;
  rdfs:range alg:ObjectOperationPair ;
.
alg:objectSymbol
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:AlgorithmObject ;
  rdfs:label "object symbol"^^xsd:string ;
  rdfs:range xsd:string ;
.
alg:operationSymbol
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:AlgorithmOperation ;
  rdfs:label "operation symbol"^^xsd:string ;
  rdfs:range xsd:string ;
.
alg:power
  rdf:type owl:DatatypeProperty ;
  rdfs:comment "This is used to model function types according to the maximum power of expression arguments when variable power is defined at a more granular level."^^xsd:string ;
  rdfs:domain alg:Function ;
  rdfs:label "power"^^xsd:string ;
  rdfs:range xsd:int ;
.
alg:symbolicExpression
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:AlgorithmExpression ;
  rdfs:label "symbolic expression"^^xsd:string ;
  rdfs:range xsd:string ;
.
alg:tokenExpressionType
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:AlgorithmExpression ;
  rdfs:label "token expression type"^^xsd:string ;
  rdfs:range xsd:token ;
  rdfs:subPropertyOf alg:expressionType ;
  skos:prefLabel "token expression type"^^xsd:string ;
.
alg:unaryOperation
  rdf:type owl:ObjectProperty ;
  rdfs:label "unary operation"^^xsd:string ;
  rdfs:range alg:UnaryOperation ;
  rdfs:subPropertyOf alg:algorithmOperation ;
  skos:prefLabel "unary operation"^^xsd:string ;
.
alg:unicodeSymbol
  rdf:type owl:DatatypeProperty ;
  rdfs:label "unicode symbol"^^xsd:string ;
  rdfs:range xsd:string ;
  rdfs:subPropertyOf alg:objectSymbol ;
  skos:prefLabel "unicode symbol"^^xsd:string ;
.
alg:unsignedExpressionType
  rdf:type owl:DatatypeProperty ;
  rdfs:domain alg:AlgorithmExpression ;
  rdfs:label "unsigned integer expression type"^^xsd:string ;
  rdfs:range xsd:unsignedInt ;
  rdfs:subPropertyOf alg:expressionType ;
  skos:prefLabel "unsigned expression type"^^xsd:string ;
.
alg:variable
  rdf:type owl:ObjectProperty ;
  rdfs:domain [
      rdf:type owl:Class ;
      owl:unionOf (
          alg:Equation
          alg:FunctionExpression
        ) ;
    ] ;
  rdfs:label "variable"^^xsd:string ;
  rdfs:range alg:Variable ;
.
