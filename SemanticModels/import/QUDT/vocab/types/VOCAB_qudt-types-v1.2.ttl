# baseURI: http://qudt.org/1.2/vocab/datatype
# imports: http://qudt.org/1.2/schema/datatype
# imports: http://www.linkedmodel.org/1.2/schema/vaem
# imports: http://www.linkedmodel.org/1.2/schema/vaem-xics
# imports: http://www.linkedmodel.org/1.2/schema/vaem-xina

# c14n-version: 3
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dtype: <http://www.linkedmodel.org/schema/dtype#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix qudt: <http://qudt.org/schema/qudt#> .
@prefix qudt-refdata: <http://qudt.org/vocab/refdata/> .
@prefix qudt-type: <http://qudt.org/vocab/type/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sc: <http://data.nasa.gov/core/schema/sc#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix vaem: <http://www.linkedmodel.org/schema/vaem#> .
@prefix voag: <http://voag.linkedmodel.org/schema/voag#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
dc:contributor
  rdf:type owl:AnnotationProperty ;
  rdfs:label "contributor"^^xsd:string ;
  rdfs:range xsd:string ;
.
dc:creator
  rdf:type owl:AnnotationProperty ;
  rdfs:label "creator"^^xsd:string ;
  rdfs:range xsd:string ;
.
dc:description
  rdf:type owl:AnnotationProperty ;
  rdfs:label "description"^^xsd:string ;
  rdfs:range xsd:string ;
.
dc:rights
  rdf:type owl:AnnotationProperty ;
  rdfs:label "rights"^^xsd:string ;
  rdfs:range xsd:string ;
.
dc:subject
  rdf:type owl:AnnotationProperty ;
  rdfs:label "subject"^^xsd:string ;
  rdfs:range xsd:string ;
.
dc:title
  rdf:type owl:AnnotationProperty ;
  rdfs:label "title"^^xsd:string ;
  rdfs:range xsd:string ;
.
<http://qudt.org/1.2/vocab/datatype>
  rdf:type owl:Ontology ;
  dc:contributor "Chip Masters"^^xsd:string ;
  dc:contributor "Daniel Mekonnen"^^xsd:string ;
  dc:creator "Ralph Hodgson"^^xsd:string ;
  dc:description "The QUDT 'Type' ontology extends 'DTYPE' with further classes and properties for the specification of data types."^^xsd:string ;
  dc:subject "Datatypes"^^xsd:string ;
  dc:title "The QUDT Type Vocabulary"^^xsd:string ;
  vaem:hasCatalogEntry voag:QUDT-SchemaCatalogEntry ;
  vaem:hasGraphRole vaem:SchemaGraph ;
  vaem:hasLicenseType voag:CC-SHAREALIKE_3PT0-US ;
  vaem:intent "This vocabulary is to be used by other ontologies that need to reference type definitions."^^xsd:string ;
  vaem:namespace "https://nst.nasa.gov/esmd/cx/type.owl#"^^xsd:string ;
  vaem:namespacePrefix "type"^^xsd:string ;
  vaem:specificity "1"^^xsd:int ;
  vaem:url "https://nst.nasa.gov/esmd/cx/n1type.owl"^^xsd:anyURI ;
  rdfs:label "Type"^^xsd:string ;
  owl:imports <http://qudt.org/1.2/schema/datatype> ;
  owl:imports <http://www.linkedmodel.org/1.2/schema/vaem> ;
  owl:imports <http://www.linkedmodel.org/1.2/schema/vaem-xics> ;
  owl:imports <http://www.linkedmodel.org/1.2/schema/vaem-xina> ;
  owl:versionInfo "$Id: $"^^xsd:string ;
.
qudt:AbstractDatatype
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Abstract_data_type> ;
  prov:wasInfluencedBy <http://xlinux.nist.gov/dads/HTML/abstractDataType.html> ;
.
qudt:AlgebraicDatatype
  rdfs:seeAlso qudt:AbstractDatatype ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Algebraic_data_type> ;
.
qudt:Heap
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Heap_(data_structure)> ;
.
qudt:Tree
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Tree_(data_structure)> ;
.
qudt-refdata:ECS_EC-EMEPM
  rdf:type qudt:EarthCoordinateSystem ;
  qudt:code 10 ;
  qudt:coordinateCenter qudt-type:CC_EarthCentered ;
  qudt:identifier "TECS-03" ;
  qudt:literal "EC-EMEP"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:RRF_EMEPM ;
  vaem:acronym "EC-EMEP"^^xsd:string ;
  rdfs:label "Earth centered earth mean equator and prime meridian coordinate system"^^xsd:string ;
  skos:definition "Earth Centered Earth Mean Equator And Prime Meridian Coordinate System"^^xsd:string ;
.
qudt-refdata:ECS_EC-ETEPME
  rdf:type qudt:EarthCoordinateSystem ;
  qudt:code 12 ;
  qudt:coordinateCenter qudt-type:CC_EarthCentered ;
  qudt:identifier "TECS-04" ;
  qudt:literal "EC-ETEP"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:NRIF_ETEPME ;
  rdfs:label "Earth centered earth true equator and prime meridian of epoch coordinate system"^^xsd:string ;
  skos:definition "Earth Centered Earth True Equator And Prime Meridian Of Epoch Coordinate System"^^xsd:string ;
.
qudt-refdata:ECS_EC-ICRF
  rdf:type qudt:EarthCoordinateSystem ;
  qudt:code 14 ;
  qudt:coordinateCenter qudt-type:CC_EarthCentered ;
  qudt:identifier "TECS-01"^^xsd:string ;
  qudt:literal "EC-IC"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:NRIF_ICRF ;
  rdfs:label "Earth centered international celestial reference system"^^xsd:string ;
  skos:definition "Earth Centered International Celestial Reference System"^^xsd:string ;
.
qudt-refdata:ECS_EC-ITRF
  rdf:type qudt:EarthCoordinateSystem ;
  qudt:code 16 ;
  qudt:coordinateCenter qudt-type:CC_EarthCentered ;
  qudt:identifier "TECS-02"^^xsd:string ;
  qudt:literal "EC-IT"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:RRF_ITRF ;
  rdfs:label "Earth centered international terrestrial reference system"^^xsd:string ;
  skos:definition "Earth Centered International Terrestrial Reference System"^^xsd:string ;
.
qudt-refdata:ECS_SC-ICRF
  rdf:type qudt:EarthCoordinateSystem ;
  qudt:code 90 ;
  qudt:coordinateCenter qudt-type:CC_EarthCentered ;
  qudt:identifier "TECS-05" ;
  qudt:referenceFrame qudt-refdata:NRIF_ICRF ;
  rdfs:label "Sun-Centered international celestial reference system"^^xsd:string ;
  skos:definition "Sun Centered International Celestial Reference System"^^xsd:string ;
.
qudt-refdata:ECS_VC-ICRF
  rdf:type qudt:EarthCoordinateSystem ;
  qudt:code 100 ;
  qudt:coordinateCenter qudt-type:CC_EarthCentered ;
  qudt:identifier "TECS-06" ;
  qudt:literal "VC-IC"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:NRIF_ICRF ;
  rdfs:label "Vehicle centered international celestial reference system"^^xsd:string ;
  skos:definition "Vehicle Centered International Celestial Reference System"^^xsd:string ;
.
qudt-refdata:FIG_EM-ETEPME
  rdf:type qudt:Figure ;
  qudt:figureCaption "COORDINATE FRAME: EARTH TRUE EQUATOR AND PRIME MERIDIAN OF EPOCH (ETEPME)"^^xsd:string ;
  qudt:figureLabel "EM-ROT"^^xsd:string ;
  qudt:image "http://localhost:8083/tbl/data/qudt.org/images/coordinate-systems/ETEPME.png"^^xsd:anyURI ;
  qudt:imageLocation "../images/coordinate-systems/ETEPME.png"^^xsd:anyURI ;
  qudt:landscape "false"^^xsd:boolean ;
  qudt:width "4.0"^^xsd:string ;
  rdfs:label "COORDINATE FRAME: EARTH TRUE EQUATOR AND PRIME MERIDIAN OF EPOCH (ETEPME)"^^xsd:string ;
.
qudt-refdata:FIG_EM-ROT
  rdf:type qudt:Figure ;
  qudt:figureCaption "COORDINATE FRAME: EARTH-MOON ROTATING (EM-ROT)"^^xsd:string ;
  qudt:figureLabel "EM-ROT"^^xsd:string ;
  qudt:image "http://localhost:8083/tbl/data/qudt.org/images/coordinate-systems/SE-ROT.png"^^xsd:anyURI ;
  qudt:imageLocation "../images/coordinate-systems/SE-ROT.png"^^xsd:anyURI ;
  qudt:landscape "false"^^xsd:boolean ;
  qudt:width "4.0"^^xsd:string ;
  rdfs:label "COORDINATE FRAME: EARTH-MOON ROTATING (EM-ROT)"^^xsd:string ;
.
qudt-refdata:FIG_ICRF
  rdf:type qudt:Figure ;
  qudt:figureCaption "COORDINATE FRAME: INTERNATIONAL CELESTIAL REFERENCE FRAME (ICRF)"^^xsd:string ;
  qudt:figureLabel "ICRF"^^xsd:string ;
  qudt:image "http://localhost:8083/tbl/data/qudt.org/images/coordinate-systems/ICRF.png"^^xsd:anyURI ;
  qudt:imageLocation "../images/coordinate-systems/ICRF.png"^^xsd:anyURI ;
  qudt:landscape "false"^^xsd:boolean ;
  qudt:width "4.0"^^xsd:string ;
  rdfs:label "COORDINATE FRAME: INTERNATIONAL CELESTIAL REFERENCE FRAME (ICRF)"^^xsd:string ;
.
qudt-refdata:FIG_ICRF_EME-EMEPM
  rdf:type qudt:Figure ;
  qudt:figureCaption "COORDINATE FRAME: EARTH MEAN EQUATOR AND PRIME MERIDIAN (EMEPM)"^^xsd:string ;
  qudt:figureLabel "EME-EMEPM"^^xsd:string ;
  qudt:image "http://localhost:8083/tbl/data/qudt.org/images/coordinate-systems/EMEPM.png"^^xsd:anyURI ;
  qudt:imageLocation "../images/coordinate-systems/EMEPM.png"^^xsd:anyURI ;
  qudt:landscape "false"^^xsd:boolean ;
  qudt:width "4.0"^^xsd:string ;
  rdfs:label "COORDINATE FRAME: EARTH MEAN EQUATOR AND PRIME MERIDIAN (EMEPM)"^^xsd:string ;
.
qudt-refdata:FIG_ICRF_EMEPM
  rdf:type qudt:Figure ;
  qudt:figureCaption "test caption"^^xsd:string ;
  qudt:figureLabel "ICRF"^^xsd:string ;
  qudt:image "http://localhost:8083/tbl/data/qudt.org/images/coordinate-systems/EMEPM.png"^^xsd:anyURI ;
  qudt:imageLocation "../images/coordinate-systems/EMEPM.png"^^xsd:anyURI ;
  qudt:landscape "false"^^xsd:boolean ;
  qudt:width "4.0"^^xsd:string ;
  rdfs:label "FIG ICRF"^^xsd:string ;
.
qudt-refdata:FIG_ITRF
  rdf:type qudt:Figure ;
  qudt:figureCaption "COORDINATE FRAME: INTERNATIONAL TERRESTRIAL REFERENCE FRAME (ITRF)"^^xsd:string ;
  qudt:figureLabel "ICRF"^^xsd:string ;
  qudt:image "http://localhost:8083/tbl/data/qudt.org/images/coordinate-systems/ITRF.png"^^xsd:anyURI ;
  qudt:imageLocation "../images/coordinate-systems/ITRF.png"^^xsd:anyURI ;
  qudt:landscape "false"^^xsd:boolean ;
  qudt:width "4.0"^^xsd:string ;
  rdfs:label "COORDINATE FRAME: INTERNATIONAL TERRESTRIAL REFERENCE FRAME (ITRF)"^^xsd:string ;
.
qudt-refdata:FIG_LPAE
  rdf:type qudt:Figure ;
  qudt:figureCaption "COORDINATE FRAME: LUNAR PRINCIPAL AXIS OF EPOCH (LPAE) (NON-ROTATING/\"INERTIAL\") OR BODY-FIXED (LPABF) (ROTATING)"^^xsd:string ;
  qudt:figureLabel "ICRF"^^xsd:string ;
  qudt:image "http://localhost:8083/tbl/data/qudt.org/images/coordinate-systems/LPAE.png"^^xsd:anyURI ;
  qudt:imageLocation "../images/coordinate-systems/LPAE.png"^^xsd:anyURI ;
  qudt:landscape "false"^^xsd:boolean ;
  qudt:width "4.0"^^xsd:string ;
  rdfs:label "COORDINATE FRAME: LUNAR PRINCIPAL AXIS OF EPOCH (LPAE) (NON-ROTATING/\"INERTIAL\") OR BODY-FIXED (LPABF) (ROTATING)"^^xsd:string ;
.
qudt-refdata:FIG_SE-ROT
  rdf:type qudt:Figure ;
  qudt:figureCaption "COORDINATE FRAME: SUN-EARTH ROTATING (SE-ROT)"^^xsd:string ;
  qudt:figureLabel "SE-ROT"^^xsd:string ;
  qudt:image "http://localhost:8083/tbl/data/qudt.org/images/coordinate-systems/SE-ROT.png"^^xsd:anyURI ;
  qudt:imageLocation "../images/coordinate-systems/SE-ROT.png"^^xsd:anyURI ;
  qudt:landscape "false"^^xsd:boolean ;
  qudt:width "4.0"^^xsd:string ;
  rdfs:label "COORDINATE FRAME: SUN-EARTH ROTATING (SE-ROT)"^^xsd:string ;
.
qudt-refdata:IERS-TN-32-2004
  rdf:type qudt:Citation ;
  qudt:description "IERS Conventions (2003), D. D. McCarthy and Gérard Petit (eds.), IERS Technical Note No. 32, 2004; http://www.iers.org/iers/publications/tn/tn32."^^xsd:string ;
  qudt:url "http://www.iers.org/iers/publications/tn/tn32."^^xsd:anyURI ;
  rdfs:label "IERS-TN-32-2004"^^xsd:string ;
  skos:prefLabel "IERS-TN-32-2004"^^xsd:string ;
.
qudt-refdata:Konopliv2001
  rdf:type qudt:Citation ;
  qudt:description "\"Recent Gravity Models as a Result of the Lunar Prospector Mission\", A. S. Konopliv, S. W. Asmar, E. Carranza, W. L. Sjogren, and D. N. Yuan, Academic Press, Icarus 150, 1-18 (2001)."^^xsd:string ;
  rdfs:label "Konopliv2001"^^xsd:string ;
  skos:prefLabel "Konopliv2001"^^xsd:string ;
.
qudt-refdata:LCS_LC-LMEBF
  rdf:type qudt:LunarCoordinateSystem ;
  qudt:code 40 ;
  qudt:coordinateCenter qudt-type:CC_MoonCentered ;
  qudt:identifier "TLCS-01" ;
  qudt:literal "LMEBF"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:RRF_LMEBF ;
  rdfs:label "Lunar mean earth body fixed Coordinate System"^^xsd:string ;
  skos:definition "Lunar Mean Earth Body Fixed Coordinate System"^^xsd:string ;
.
qudt-refdata:LCS_LC-LPABF
  rdf:type qudt:LunarCoordinateSystem ;
  qudt:code 42 ;
  qudt:coordinateCenter qudt-type:CC_MoonCentered ;
  qudt:description "Lunar body-fixed coordinate frame aligned with the principal axes of the Moon."^^xsd:string ;
  qudt:identifier "TLCS-02" ;
  qudt:literal "LPABF"^^xsd:string ;
  qudt:realization "This is a fixed rotation from LMEBF"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:RRF_LPABF ;
  rdfs:label "Lunar principal axis body fixed Coordinate System"^^xsd:string ;
  skos:definition "Lunar Principal Axis Body Fixed Coordinate System"^^xsd:string ;
.
qudt-refdata:LCS_LC-LPAE
  rdf:type qudt:LunarCoordinateSystem ;
  qudt:code 42 ;
  qudt:coordinateCenter qudt-type:CC_MoonCentered ;
  qudt:identifier "TLCS-03" ;
  qudt:literal "LPABF"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:NRIF_LPAE ;
  rdfs:label "Lunar Principal Axis of Epoch Coordinate System"^^xsd:string ;
.
qudt-refdata:MCS_MC-MMEIAUE
  rdf:type qudt:MarsCoordinateSystem ;
  qudt:code 50 ;
  qudt:identifier "TMCS-01" ;
  qudt:literal "MMEIAUE"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:NRIF_MMEIAUE ;
  rdfs:label "Mars mean equator and IAU-Node of epoch Coordinate System"^^xsd:string ;
  skos:definition "Mars Mean Equator And IAU-Node Of Epoch Coordinate System"^^xsd:string ;
.
qudt-refdata:MCS_MC-MMEPMBF
  rdf:type qudt:MarsCoordinateSystem ;
  qudt:code 52 ;
  qudt:identifier "TMCS-02" ;
  qudt:literal "MMEPMBF"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:RRF_MMEPMBF ;
  rdfs:label "Mars mean equator and prime meridian body-fixed Coordinate System"^^xsd:string ;
  skos:definition "Mars Mean Equator And Prime Meridian Body-Fixed Coordinate System"^^xsd:string ;
.
qudt-refdata:NRIF_ETEPMBF
  rdf:type qudt:NonRotatingInertialFrame ;
  qudt:identifier "T110-01"^^xsd:string ;
  qudt:literal "ETEPMBF"^^xsd:string ;
  qudt:realization "The International Terrestrial Reference Frame (ITRF) is realized by the locations of a set of points or stations on a tide-free Earth. As measurements and models have improved or changed, these locations have been changed also and the ITRF has moved slightly with respect to the physical Earth every few years."^^xsd:string ;
  qudt:xAxisDefinition "The intersection of the prime meridian and the rotation equator of the Earth."^^xsd:string ;
  qudt:yAxisDefinition "Completes a standard, right-handed coordinate frame."^^xsd:string ;
  qudt:zAxisDefinition "The rotation pole of the Earth."^^xsd:string ;
  rdfs:label "Earth True Equator and Prime Meridian Body Fixed"^^xsd:string ;
.
qudt-refdata:NRIF_ETEPME
  rdf:type qudt:NonRotatingInertialFrame ;
  qudt:figure qudt-refdata:FIG_EM-ETEPME ;
  qudt:frameType qudt-type:FT_NON-ROTATING ;
  qudt:identifier "T110-02"^^xsd:string ;
  qudt:literal "ETEPME"^^xsd:string ;
  qudt:longDescription "The relationship between ITRF and ICRS is discussed extensively in [IERS-TN-32-2004]. Different models of this relationship are used. The NASA Deep Space Network uses the Lieske precession model (1976) and the corresponding nutation model is realized by nutations provided on DE405; the corresponding timing and polar motion data as measured for times past are maintained in internal files at the Jet Propulsion Laboratory. The IERS has proposed use of more recent precession (two flavors available) and nutation models and publishes timing and polar motion data for times past in its Earth Orientation Parameters (EOP) file available at http://www.iers.org. Either algorithm should be sufficiently accurate and it should be stated which is being used. However, the data and models must not be mixed. Do not, for example, use IERS EOP data with the Lieske precession model and DE405 nutations."^^xsd:string ;
  qudt:realization "The International Terrestrial Reference Frame as defined for 1993 (ITRF93), as located in the ICRF at the epoch given using a consistent set of precession, nutation, and timing and polar motion models."^^xsd:string ;
  qudt:xAxisDefinition "The intersection of the prime meridian and the rotation equator of the Earth, in the ICRF and at the epoch given."^^xsd:string ;
  qudt:yAxisDefinition "Completes a standard, right-handed coordinate frame."^^xsd:string ;
  qudt:zAxisDefinition "The rotation pole of the Earth, in the ICRF and at the epoch given."^^xsd:string ;
  rdfs:label "Earth True Equator and Prime Meridian of Epoch"^^xsd:string ;
  rdfs:seeAlso qudt-refdata:IERS-TN-32-2004 ;
  skos:prefLabel "Earth True Equator and Prime Meridian of Epoch"^^xsd:string ;
.
qudt-refdata:NRIF_ICRF
  rdf:type qudt:NonRotatingInertialFrame ;
  qudt:description "The International celestial reference frame (ICRF) is the best-determined and most stable reference frame and is the root frame.  Other reference frames are often given with respect to the ICRF."^^xsd:string ;
  qudt:figure qudt-refdata:FIG_ICRF ;
  qudt:frameType qudt-type:FT_INERTIAL ;
  qudt:identifier "T110-03"^^xsd:string ;
  qudt:literal "ICRF"^^xsd:string ;
  qudt:realization "The International Celestial Reference Frame (ICRF) was defined in 1995 with locations given for 22 quasars and other bright radio objects. This definition was extended by the addition of more sources in 2000."^^xsd:string ;
  qudt:xAxisDefinition "Defined as the cross product of the Z-axis (as defined above) and the Earth mean orbit pole of J2000 (i.e. the ecliptic pole of J2000). The X-axis of this coordinate frame is the Earth vernal equinox of J2000."^^xsd:string ;
  qudt:yAxisDefinition "Completes a standard, right-handed coordinate frame."^^xsd:string ;
  qudt:zAxisDefinition "Defined as the pole vector of the Earth Mean Equator of J2000 (where J2000 = Julian date 2451545.0 TDB (Barycentric Dynamical Time))."^^xsd:string ;
  rdfs:label "International celestial reference frame"^^xsd:string ;
.
qudt-refdata:NRIF_LPAE
  rdf:type qudt:NonRotatingInertialFrame ;
  qudt:abbreviation "LPAE"^^xsd:string ;
  qudt:code 44 ;
  qudt:figure qudt-refdata:FIG_LPAE ;
  qudt:identifier "T110-04"^^xsd:string ;
  qudt:literal "LPAE"^^xsd:string ;
  qudt:xAxisDefinition "Points in the direction of the Moon’s prime meridian principal axis of Epoch (minimum moment of inertia)."^^xsd:string ;
  qudt:yAxisDefinition "Completes a standard, right-handed coordinate frame."^^xsd:string ;
  qudt:zAxisDefinition "Points in the direction of the Moon’s North pole principal axis of Epoch (maximum moment of inertia)."^^xsd:string ;
  rdfs:comment "Finding the principal axes depends on solving for the dynamics of the Moon’s orientation, which must be done in conjunction with solving for its motion in space, though the Moon’s motion in space can also be solved for independently. The terms “north pole” and “prime meridian” are loosely used for the Z and X axes respectively of both this and the Lunar Mean Earth frames."^^xsd:string ;
  rdfs:label "Lunar Principal Axis of Epoch"^^xsd:string ;
  skos:definition "Lunar Principal Axis Of Epoch Coordinate System"^^xsd:string ;
  skos:prefLabel "Lunar Principal Axis of Epoch"^^xsd:string ;
.
qudt-refdata:NRIF_MMEIAUE
  rdf:type qudt:NonRotatingInertialFrame ;
  qudt:code 50 ;
  qudt:frameType qudt-type:FT_NON-ROTATING ;
  qudt:identifier "T110-05"^^xsd:string ;
  qudt:literal "MMEIAUE"^^xsd:string ;
  qudt:realization "This frame is realized from the ICRF, precessed and rotated Relationships: according to the formulae in IAU2000, [Seidelmann2000]"^^xsd:string ;
  qudt:xAxisDefinition "Defined as the cross product of the ICRF Z-axis with the Z-axis (as defined above)."^^xsd:string ;
  qudt:yAxisDefinition "Completes a standard, right-handed coordinate frame."^^xsd:string ;
  qudt:zAxisDefinition "Defined as the pole vector of the Mars Mean Equator of Epoch."^^xsd:string ;
  rdfs:label "Mars Mean Equator and IAU-Node of Epoch"^^xsd:string ;
  skos:definition "Mars Mean Equator And IAU-Node Of Epoch Coordinate System"^^xsd:string ;
  skos:prefLabel "Mars Mean Equator and IAU-Node of Epoch"^^xsd:string ;
.
qudt-refdata:Other
  rdf:type qudt:Citation ;
  qudt:description """10. “A Meaningful Relative Motion Coordinate System For Generic Use,” D. R. Adamo, AAS Paper No. 05-306, presented at the AAS/AIAA Astrodynamics Specialists Conference, Lake Tahoe, California, August 7 - 11, 2005.
11. “Lunar moments, tides, orientation, and coordinate frames,” J. G. Williams, X. X. Newhall, and J. O. Dickey, Planet. Space Sci. 44:1077-1080, 1996."""^^xsd:string ;
  qudt:description "2. “The adoption of ICRS on 1 January 1998: meaning and consequences”, Letter to the Editor, M. Feissel and F. Mignard, Astronomy and Astrophysics, 331, L33-L36, 1998, http://adsabs.harvard.edu/cgi-bin/nph- bib_query?bibcode=1998A%26A...331L..33F&amp;db_key=AST&amp;data_typ e=HTML&amp;format= "^^xsd:string ;
  qudt:description """4. “Lunar Laser Ranging Science: Gravitational Physics and Lunar Interior and Geodesy”, J. G. Williams, S. G. Turyshev, D. H. Boggs, and J. T. Ratcliff, 35th COSPAR Scientific Assembly, Paris, France, July 18-24, 2004, Advances in Space Research, in press 2005, http://arxiv.org/abs/gr-qc/?412049.
"""^^xsd:string ;
  qudt:description """6. “JPL Planetary and Lunar Ephemerides, DE403/LE403”, E. M. Standish, X. X. Newhall, J. G. Williams, and W. M. Folkner, JPL IOM 314.10-127, May 22, 1995,
http://ssd.jpl.nasa.gov/iau-comm4/de403iom/.
"""^^xsd:string ;
  qudt:description """8. IERS Conventions (2003), D. D. McCarthy and Gérard Petit (eds.), IERS Technical Note No. 32, 2004; http://www.iers.org/iers/publications/tn/tn32.
9. “Lunar coordinates in the regions of the Apollo lander,” M. E. Davies and T. R. Coltin, Journal Of Geophysical Research, V. 105, No. E8, Pages 20, 277-20, 280, August 25, 2000."""^^xsd:string ;
  rdfs:label "Other"^^xsd:string ;
  skos:prefLabel "Other"^^xsd:string ;
.
qudt-refdata:RRF_EMEPM
  rdf:type qudt:RotatingReferenceFrame ;
  qudt:figure qudt-refdata:FIG_ICRF_EME-EMEPM ;
  qudt:frameType qudt-type:FT_NON-ROTATING ;
  qudt:identifier "T110-07"^^xsd:string ;
  qudt:literal "EMEPM"^^xsd:string ;
  qudt:longDescription "Reasonable alternatives include the ICRF precessed and rotated according to any standard precession model, but since the “mean” is an approximation, it seems not worthwhile to additional computation to this definition. Although [Seidelmann2000] specifies TCB (Barycentric Coordinate Time), this in fact was an error introduced late in the preparation of the paper; the correct time scale for use in the IAU formulae given in Table 2.0-1 in the paper is TDB (Barycentric Dynamical Time, i.e., ephemeris time) and the standard epoch is 2451545.0 TDB."^^xsd:string ;
  qudt:realization "This frame is realized from the ICRF, precessed and rotated according to the formulae in IAU2000."^^xsd:string ;
  qudt:xAxisDefinition "The intersection of the prime meridian and the rotation equator of the Earth, in the ICRF and as a function of time."^^xsd:string ;
  qudt:yAxisDefinition "Completes a standard, right-handed coordinate frame."^^xsd:string ;
  qudt:zAxisDefinition "The mean rotation pole of the Earth, in the ICRF and as a function of time."^^xsd:string ;
  rdfs:label "Earth Mean Equator and Prime Meridian"^^xsd:string ;
  skos:prefLabel "Earth Mean Equator and Prime Meridian"^^xsd:string ;
.
qudt-refdata:RRF_EMR
  rdf:type qudt:RotatingReferenceFrame ;
  qudt:code 20 ;
  qudt:description "In this coordinate frame, the two collinear Lagrange points LL_1 and LL_2 (sometimes called Libration points) both lie along the positive X-axis approximately 60000 kilometers from the Moon. The LL_1 point lies on the X-axis between the Moon and the Earth and the LL_2 point lies on the X-axis on the other side of the Moon away from the Earth. See [Roncoli2005] for more information about Lagrange points."^^xsd:string ;
  qudt:frameType qudt-type:FT_ROTATING ;
  qudt:identifier "T110-08"^^xsd:string ;
  qudt:literal "EM-ROT"^^xsd:string ;
  qudt:xAxisDefinition "Points in the direction of the vector from the Earth to the Moon."^^xsd:string ;
  qudt:yAxisDefinition "Completes a standard, right-handed coordinate frame."^^xsd:string ;
  qudt:zAxisDefinition "Points in the direction of the instantaneous orbit normal of the Moon about the Earth."^^xsd:string ;
  rdfs:label "Earth-Moon Rotating"^^xsd:string ;
  skos:definition "Earth-Moon Rotating Coordinate System"^^xsd:string ;
  skos:prefLabel "Earth-Moon Rotating"^^xsd:string ;
.
qudt-refdata:RRF_ICRF
  rdf:type qudt:ReferenceFrame ;
  qudt:description "The ICRF is the best-determined and most stable reference frame and is the “root” frame—other reference frames are often given with respect to the ICRF."^^xsd:string ;
  qudt:figure qudt-refdata:FIG_ICRF ;
  qudt:frameType qudt-type:FT_NON-ROTATING ;
  qudt:identifier "T110-06"^^xsd:string ;
  qudt:literal "ICRF"^^xsd:string ;
  qudt:longDescription "The vehicle-centered,EME2000coordinatesystemisusefulforvehicleattitude determination since the positions of stars in star catalogs used with star trackers and other celestial sensors are generally expressed in the EME2000 coordinate frame. However, caution must be exercised here since the EME2000 frames realized in the past by various star catalogs (such as FK5) and ephemerides (such as DE205) were actually slightly different frames because estimates of the actual location EME2000 changed with improvements in models and new data. For this reason the ICRF is the recommended standard."^^xsd:string ;
  qudt:realization "The International Celestial Reference Frame (ICRF) was defined in 1995 with locations given for 22 quasars and other bright radio objects. This definition was extended by the addition of more sources in 2000. See Reference 8 for further information."^^xsd:string ;
  qudt:xAxisDefinition "Defined as the cross product of the Z-axis (as defined above) and the Earth mean orbit pole of J2000 (i.e. the ecliptic pole of J2000). The X-axis of this coordinate frame is the Earth vernal equinox of J2000."^^xsd:string ;
  qudt:yAxisDefinition "Completes a standard, right-handed coordinate frame."^^xsd:string ;
  qudt:zAxisDefinition "Defined as the pole vector of the Earth Mean Equator of J2000 (where J2000 = Julian date 2451545.0 TDB (Barycentric Dynamical Time))."^^xsd:string ;
  rdfs:label "International Celestial Reference Frame"^^xsd:string ;
  owl:sameAs qudt-refdata:NRIF_ICRF ;
  skos:altLabel "Earth Mean Equator and Equinox of J2000"^^xsd:string ;
  skos:prefLabel "International Celestial Reference Frame"^^xsd:string ;
.
qudt-refdata:RRF_ITRF
  rdf:type qudt:RotatingReferenceFrame ;
  qudt:description "At current levels of accuracy and precision the location of the ITRF at any point in time with respect to the ICRF cannot be predicted because the Earth (and its weather!) are not modeled that accurately. The location of the true pole depends on modeling precession and nutation and then measuring the actual rotation pole relative to the modeled pole with respect to both the ITRF and the ICRF. One can use either the NASA Deep Space Network’s models and file of pole locations, which also includes timing information to tell where the prime meridian was OR one can use the IERS models and file of pole locations and timing called the Earth Orientation Parameters (EOP) file BUT NOT BOTH, e.g., do not use the IERS EOP with the DSN models for precession and nutation. The IERS information is more publicly available and is recommended. See Reference 8 for more information, including the relationships between the various ITRF frames."^^xsd:string ;
  qudt:figure qudt-refdata:FIG_ITRF ;
  qudt:frameType qudt-type:FT_ROTATING ;
  qudt:identifier "T110-09"^^xsd:string ;
  qudt:literal "ITRF"^^xsd:string ;
  qudt:realization "The International Terrestrial Reference Frame (ITRF) is realized by the locations of a set of points or stations on a tide-free Earth. As measurements and models have improved or changed, these locations have been changed also and the ITRF has moved slightly with respect to the physical Earth every few years; ITRF93 is recommended."^^xsd:string ;
  qudt:xAxisDefinition "The intersection of the prime meridian and the rotation equator of the Earth."^^xsd:string ;
  qudt:yAxisDefinition "Completes a standard, right-handed coordinate frame."^^xsd:string ;
  qudt:zAxisDefinition "The rotation pole of the Earth."^^xsd:string ;
  rdfs:label "International Terrestrial Reference Frame"^^xsd:string ;
  rdfs:seeAlso qudt-refdata:RRF_ICRF ;
  owl:sameAs qudt-refdata:NRIF_ETEPMBF ;
  skos:prefLabel "International Terrestrial Reference Frame"^^xsd:string ;
.
qudt-refdata:RRF_LMEBF
  rdf:type qudt:RotatingReferenceFrame ;
  qudt:code 40 ;
  qudt:description "Lunar body-fixed coordinate frame aligned with the rotation axis of the Moon."^^xsd:string ;
  qudt:frameType qudt-type:FT_ROTATING ;
  qudt:identifier "T110-10"^^xsd:string ;
  qudt:literal "LMEBF"^^xsd:string ;
  qudt:longDescription """The location of the LMEBF is a fixed rotation from the LPABF given in [Williams96] as: “The three rotations (in arcseconds) from Principal (P) to Mean (M) axes are M = R_1(-0.15′′) R_2(-79.12′′) R_3(-66.48′′) P.\"

Historical data and surface maps are given in this frame. Finding the rotation axes and principal axes depends on solving for the dynamics of the Moon’s orientation, which must be done in conjunction with solving for its motion in space, though the Moon’s motion in space can also be solved for independently.

Using the traditional terminology and syntax for trajectory-related coordinate frames, this frame probably could have been called “Moon True Equator and Prime Meridian Body-Fixed” since the lunar principal axes directions represent the best (or “true”) orientations of the Moon’s pole and prime meridian at any given time. These axes are slightly rotated away from the Moon’s principal axes because the Moon is tidally locked to Earth so that perturbations from higher order terms in the gravity field are not averaged out by rotation."""^^xsd:string ;
  qudt:realization "This is realized by the locations of the three Apollo and one Lunar laser ranging retroreflectors"^^xsd:string ;
  qudt:xAxisDefinition "Points in the direction of the Moon’s historical prime meridian (mean direction toward Earth)."^^xsd:string ;
  qudt:yAxisDefinition "Completes a standard, right-handed coordinate frame."^^xsd:string ;
  qudt:zAxisDefinition "Points in the direction of the Moon’s North rotation pole (mean rotation axis)."^^xsd:string ;
  rdfs:label "Lunar Mean Earth Body-Fixed"^^xsd:string ;
  skos:definition "Lunar Mean Earth Body Fixed Coordinate System"^^xsd:string ;
  skos:prefLabel "Lunar Mean Earth Body-Fixed"^^xsd:string ;
.
qudt-refdata:RRF_LPABF
  rdf:type qudt:RotatingReferenceFrame ;
  qudt:code 42 ;
  qudt:description "Lunar body-fixed coordinate frame aligned with the principal axes of the Moon. The location of the LPABF in the ICRF should be solved for in conjunction with solving for the Moon’s motion in space."^^xsd:string ;
  qudt:frameType qudt-type:FT_ROTATING ;
  qudt:identifier "T110-11"^^xsd:string ;
  qudt:literal "LPABF"^^xsd:string ;
  qudt:realization "This is a fixed rotation from LMEBF"^^xsd:string ;
  qudt:xAxisDefinition "Points in the direction of the Moon's prime meridian principal axis (minimum moment of inertia)."^^xsd:string ;
  qudt:yAxisDefinition "Completes a standard, right-handed coordinate frame."^^xsd:string ;
  qudt:zAxisDefinition "Points in the direction of the Moon's North pole principal axis (maximum moment of inertia)."^^xsd:string ;
  rdfs:comment "Lunar gravity fields are defined in this frame. Finding the principal axes depends on solving for the dynamics of the Moon’s orientation, which must be done in conjunction with solving for its motion in space, though the Moon’s motion in space can also be solved for independently. The terms “north pole” and “prime meridian” are loosely used for the Z and X axes respectively of both this and the Lunar Mean Earth frames"^^xsd:string ;
  rdfs:label "Lunar Principal Axis Body-Fixed"^^xsd:string ;
  skos:prefLabel "Lunar Principal Axis Body-Fixed"^^xsd:string ;
.
qudt-refdata:RRF_LVC
  rdf:type qudt:RotatingReferenceFrame ;
  qudt:description "Since this coordinate system is non-Euclidean, the axes are not defined by vectors but are lines and circles in space through an origin at a vehicle in orbit around a central body."^^xsd:string ;
  qudt:frameType qudt-type:FT_NON-ROTATING ;
  qudt:identifier "T110-12"^^xsd:string ;
  qudt:literal "LVC"^^xsd:string ;
  qudt:realization "Defined by the position and velocity vectors associated with a vehicle and thus directly related to the coordinate system in which those vectors are expressed."^^xsd:string ;
  qudt:xAxisDefinition "Defined as the circle that intersects the vehicle center-of-mass, is centered on the central body center, and lies in the vehicle orbit plane, positive in the direction of motion."^^xsd:string ;
  qudt:xCoordinateDefinition "Defined as the distance on C between the radial projection of P onto C and the Y-axis; this is taken to be positive if P is on the same side from the Y-Z plane as the vehicle velocity vector points and negative otherwise. Equivalently, if we let θ be the centralbody-centered angle from the vehicle to the projection of P onto the orbit plane (measured positively in a right-handed sense with respect to the vehicle orbit angular momentum), then the xcoordinate of the point is θ (in radians) times the radius of the vehicle. Note that the LVC x-coordinate is arbitrary for P located on N."^^xsd:string ;
  qudt:yAxisDefinition "Defined as the line that intersects the vehicle center-of-mass and is normal to the vehicle orbit plane, positive opposite the direction of the orbit angular momentum vector (thus completing a right-handed coordinate system)."^^xsd:string ;
  qudt:yCoordinateDefinition "Defined as the distance from the orbit plane, positive on the side opposite the angular momentum direction."^^xsd:string ;
  qudt:zAxisDefinition "Defined as the line through the vehicle center-of-mass and the central body center, positive toward the central body center."^^xsd:string ;
  qudt:zCoordinateDefinition "Defined as the distance from the central body center to the vehicle center-of-mass minus the distance between P and N; equivalently, the radius of C minus the radius of the projection of P onto the vehicle orbit plane."^^xsd:string ;
  rdfs:label "Local Vertical Curvilinear"^^xsd:string ;
  skos:prefLabel "Local Vertical Curvilinear"^^xsd:string ;
.
qudt-refdata:RRF_LVLH
  rdf:type qudt:RotatingReferenceFrame ;
  qudt:frameType qudt-type:FT_ROTATING ;
  qudt:identifier "T110-13"^^xsd:string ;
  qudt:literal "LVLH"^^xsd:string ;
  qudt:realization "Defined by the position and velocity vectors associated with a Relationships: vehicle and thus directly related to the coordinate system in which those vectors are expressed."^^xsd:string ;
  qudt:xAxisDefinition "Defined as the circle that intersects the vehicle center-of-mass, is centered on the central body center, and lies in the vehicle orbit plane, positive in the direction of motion."^^xsd:string ;
  qudt:yAxisDefinition "Completes a standard, right-handed coordinate frame and is positive in the direction of vehicle motion."^^xsd:string ;
  qudt:zAxisDefinition "Defined as a line that lies along the radius vector from the central body center to the vehicle center-of-mass and is positive toward the central body center."^^xsd:string ;
  rdfs:label "Local Vertical Local Horizontal"^^xsd:string ;
.
qudt-refdata:RRF_MMEPMBF
  rdf:type qudt:RotatingReferenceFrame ;
  qudt:code 52 ;
  qudt:description "Mars body-fixed coordinate frame with the Mars North pole and prime meridian directions defined by the IAU/IAG [@Seidelmann:2000]."^^xsd:string ;
  qudt:frameType qudt-type:FT_ROTATING ;
  qudt:identifier "T110-14"^^xsd:string ;
  qudt:literal "MMEPMBF"^^xsd:string ;
  rdfs:label "Mars Mean Equator and Prime Meridian Body-Fixed"^^xsd:string ;
  skos:definition "Mars Mean Equator And Prime Meridian Body-Fixed Coordinate System"^^xsd:string ;
  skos:prefLabel "Mars Mean Equator and Prime Meridian Body-Fixed"^^xsd:string ;
.
qudt-refdata:RRF_SER
  rdf:type qudt:RotatingReferenceFrame ;
  qudt:code 92 ;
  qudt:description "In this coordinate frame, the two collinear Lagrange points EL_1 and EL_2 (sometimes called Libration points) both lie along the positive X-axis approximately 1.5 million kilometers from the Earth. The EL_1 point lies on the X-axis between the Earth and the Sun and the EL_2 point lies on the X-axis on the other side of the Earth away from the Sun. See [Roncoli2005] for more information about Lagrange points."^^xsd:string ;
  qudt:figure qudt-refdata:FIG_EM-ROT ;
  qudt:frameType qudt-type:FT_ROTATING ;
  qudt:identifier "T110-15"^^xsd:string ;
  qudt:literal "SE-ROT"^^xsd:string ;
  qudt:xAxisDefinition "Points in the direction of the vector from the Sun to the Earth."^^xsd:string ;
  qudt:yAxisDefinition "Completes a standard, right-handed coordinate frame."^^xsd:string ;
  qudt:zAxisDefinition "Points in the direction of the instantaneous orbit normal of the Earth about the Sun."^^xsd:string ;
  rdfs:label "Sun-Earth Rotating"^^xsd:string ;
.
qudt-refdata:Roncoli2005
  rdf:type qudt:Citation ;
  qudt:description "\"Lunar Constants and Models Document”, R. Roncoli, JPL D-32296, September 23, 2005, http://ssd.jpl.nasa.gov/?lunar_doc."^^xsd:string ;
  qudt:url "http://ssd.jpl.nasa.gov/?lunar_doc"^^xsd:anyURI ;
  rdfs:label "Roncoli2005"^^xsd:string ;
  skos:prefLabel "Roncoli2005"^^xsd:string ;
.
qudt-refdata:Seidelmann2000
  rdf:type qudt:Citation ;
  qudt:description "“Report of the IAU/IAG Working Group on Cartographic Coordinates and Rotational Elements of the Planets and Satellites: 2000”, P.K. Seidelmann, V. K. Abalakin, M. Bursa, M. E. Davies, C. DeBergh, J. H. Lieske, J. Oberst, J. L. Simon, E. M. Standish, P. Stooke, and P. C. Thomas, Celestial Mechanics and Dynamical Astronomy 82: 83-110, 2002 (http://springerlink.metapress.com, follow the links from “Browse by Online Libraries (subject areas)”, then “Physics and Astronomy”, then “Celestial Mechanics and Dynamical Astronomy”, then “Volume 82 - Number 1/January 2002”, then follow the links to download the paper."^^xsd:string ;
  rdfs:label "Seidelmann2000"^^xsd:string ;
  skos:prefLabel "Seidelmann2000"^^xsd:string ;
.
qudt-refdata:TBRCS_EC-EMR
  rdf:type qudt:ThreeBodyRotatingCoordinateSystem ;
  qudt:code 20 ;
  qudt:coordinateCenter qudt-type:CC_EarthCentered ;
  qudt:identifier "TTBRCS-01" ;
  qudt:literal "EM-ROT"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:RRF_EMR ;
  rdfs:label "Earth-Centered Earth-Moon Rotating Coordinate System"^^xsd:string ;
.
qudt-refdata:TBRCS_EC-SER
  rdf:type qudt:ThreeBodyRotatingCoordinateSystem ;
  qudt:code 92 ;
  qudt:coordinateCenter qudt-type:CC_EarthCentered ;
  qudt:identifier "TTBRCS-02" ;
  qudt:literal "SE-ROT"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:RRF_SER ;
  rdfs:label "Earth-Centered Sun Earth Rotating Coordinate System"^^xsd:string ;
  skos:definition "Earth-Centered Sun Earth Rotating Coordinate System"^^xsd:string ;
.
qudt-refdata:TBRCS_MC-EMR
  rdf:type qudt:ThreeBodyRotatingCoordinateSystem ;
  qudt:code 20 ;
  qudt:coordinateCenter qudt-type:CC_MoonCentered ;
  qudt:identifier "TTBRCS-03" ;
  qudt:literal "EM-ROT"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:RRF_EMR ;
  rdfs:label "Moon-Centered Earth-Moon Rotating Coordinate System"^^xsd:string ;
.
qudt-refdata:TBRCS_SC-SER
  rdf:type qudt:ThreeBodyRotatingCoordinateSystem ;
  qudt:code 92 ;
  qudt:coordinateCenter qudt-type:CC_SunCentered ;
  qudt:identifier "TTBRCS-04" ;
  qudt:literal "SE-ROT"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:RRF_SER ;
  rdfs:label "Sun-Centered Sun Earth Rotating Coordinate System"^^xsd:string ;
  skos:definition "Sun-Centered Sun Earth Rotating Coordinate System"^^xsd:string ;
.
qudt-refdata:VCS_VC-LVC
  rdf:type qudt:LocalCoordinateSystem ;
  rdf:type qudt:VehicleCoordinateSystem ;
  qudt:code 30 ;
  qudt:coordinateCenter qudt-type:CC_VehicleCentered ;
  qudt:identifier "TVCS-01" ;
  qudt:literal "VC-LVC"^^xsd:string ;
  qudt:referenceFrame qudt-refdata:RRF_LVC ;
  rdfs:label "Vehicle centered local vertical curvilinear coordinate system"^^xsd:string ;
.
qudt-refdata:VCS_VC-LVLH
  rdf:type qudt:LocalCoordinateSystem ;
  rdf:type qudt:VehicleCoordinateSystem ;
  qudt:code 32 ;
  qudt:coordinateCenter qudt-type:CC_VehicleCentered ;
  qudt:identifier "TVCS-02" ;
  qudt:literal "LVLH"^^xsd:string ;
  rdfs:label "Local vertical local horizontal coordinate system"^^xsd:string ;
  skos:definition "Local Vertical Local Horizontal Coordinate System"^^xsd:string ;
.
qudt-refdata:Williams96
  rdf:type qudt:Citation ;
  qudt:description "“Lunar moments, tides, orientation, and coordinate frames,” J. G. Williams, X. X. Newhall, and J. O. Dickey, Planet. Space Sci. 44:1077-1080, 1996."^^xsd:string ;
  rdfs:label "Williams96"^^xsd:string ;
  skos:prefLabel "Williams96"^^xsd:string ;
.
qudt-type:ACYCLIC-GRAPH
  rdf:type qudt:Graph ;
  rdfs:label "Acyclic Graph"^^xsd:string ;
.
qudt-type:ALPHANUMERIC
  rdf:type qudt:CharacterType ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:code "106"^^xsd:nonNegativeInteger ;
  qudt:identifier "T001-00"^^xsd:string ;
  qudt:literal "alphanumeric"^^xsd:string ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "ALPHANUMERIC"^^xsd:string ;
.
qudt-type:ARRAY
  rdf:type qudt:Array ;
  dc:description "Multi-dimensional array of elements of scalar types. The number of array dimensions are expressed as an unsigned integer (octet). Elements are arranged in a sequence with the most significant dimension occurs first." ;
  rdfs:label "ARRAY"^^xsd:string ;
.
qudt-type:AxialOrientationTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:code "1000"^^xsd:nonNegativeInteger ;
  qudt:value qudt-type:NegativeX ;
  qudt:value qudt-type:NegativeY ;
  qudt:value qudt-type:NegativeZ ;
  qudt:value qudt-type:PositiveX ;
  qudt:value qudt-type:PositiveY ;
  qudt:value qudt-type:PositiveZ ;
  rdfs:label "Axial Orientation Type Enumeration"^^xsd:string ;
.
qudt-type:B-TREE
  rdf:type qudt:BalancedTree ;
  rdfs:label "B-Tree"^^xsd:string ;
.
qudt-type:BALANCED-TREE
  rdf:type qudt:BalancedTree ;
  rdfs:label "Balanced Tree"^^xsd:string ;
.
qudt-type:BINARY-HEAP
  rdf:type qudt:Heap ;
  qudt:description "A \\textit{Binary Heap} is one where the maximum number of children each node can have is at most two."^^xsd:string ;
  rdfs:label "Binary Heap"^^xsd:string ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Heap_(data_structure)> ;
.
qudt-type:BINARY-TREE
  rdf:type qudt:BinaryTree ;
  qudt:description "A \\textit{Binary Tree} is a tree data structure in which each node has at most two child nodes, usually distinguished as \"left\" and \"right\". Nodes with children are parent nodes, and child nodes may contain references to their parents. Outside the tree, there is often a reference to the \"root\" node (the ancestor of all nodes), if it exists. Any node in the data structure can be reached by starting at root node and repeatedly following references to either the left or right child. A tree which does not have any node other than root node is called a null tree. In a binary tree, a degree of every node is maximum two. A tree with $n$ nodes has exactly $n−1$ branches or degree."^^xsd:string ;
  qudt:literal "binaryTree"^^xsd:string ;
  rdfs:label "Binary Tree"^^xsd:string ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Binary_Tree> ;
.
qudt-type:BOOLEAN
  rdf:type qudt:BooleanType ;
  qudt:ansiSQLName "BOOLEAN"^^xsd:string ;
  qudt:code "1"^^xsd:nonNegativeInteger ;
  qudt:description "In computer science, the Boolean or logical data type is a data type, having two values (usually denoted true and false), intended to represent the truth values of logic and Boolean algebra. The Boolean data type is the primary result of conditional statements, which allow different actions and change control flow depending on whether a programmer-specified boolean condition evaluates to true or false."^^xsd:string ;
  qudt:encoding qudt-type:BooleanEncoding ;
  qudt:identifier "T000-01"^^xsd:string ;
  qudt:javaName "boolean"^^xsd:string ;
  qudt:jsName "Boolean()"^^xsd:string ;
  qudt:literal "boolean"^^xsd:string ;
  qudt:microsoftSQLServerName "bit"^^xsd:string ;
  qudt:mySQLName "BOOL"^^xsd:string ;
  qudt:mySQLName "BOOLEAN"^^xsd:string ;
  qudt:mySQLName "TINYINT(1)"^^xsd:string ;
  qudt:odbcName "SQL_BIT"^^xsd:string ;
  qudt:oleDBName "DBTYPE_BOOL"^^xsd:string ;
  qudt:oracleSQLName "RAW(1)"^^xsd:string ;
  qudt:pythonName "bool"^^xsd:string ;
  qudt:rdfsDatatype xsd:boolean ;
  rdfs:label "BOOLEAN"^^xsd:string ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Boolean%5Fdata%5Ftype> ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/aa275635(v=sql.80).aspx> ;
.
qudt-type:BYTE
  rdf:type qudt:SignedShortIntegerType ;
  qudt:abbreviation "byte"^^xsd:string ;
  qudt:cName "Byte"^^xsd:string ;
  qudt:code "800"^^xsd:string ;
  qudt:description "The byte data type is an 8-bit signed two's complement integer. It has a minimum value of -128 and a maximum value of 127 (inclusive). The byte data type can be useful for saving memory in large arrays, where the memory savings actually matters. They can also be used in place of int where their limits help to clarify your code; the fact that a variable's range is limited can serve as a form of documentation."^^xsd:string ;
  qudt:encoding qudt-type:OctetEncoding ;
  qudt:identifier "T002-01"^^xsd:string ;
  qudt:literal "byte"^^xsd:string ;
  qudt:maxInclusive "127"^^dtype:numericUnion ;
  qudt:minInclusive "-128"^^dtype:numericUnion ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "Byte"^^xsd:string ;
  prov:wasInfluencedBy <http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html> ;
.
qudt-type:BigEndian
  rdf:type qudt:EndianType ;
  qudt:code 1 ;
  qudt:literal "big"^^xsd:string ;
  rdfs:label "Big Endian"^^xsd:string ;
.
qudt-type:BitAligned
  rdf:type qudt:AlignmentType ;
  qudt:literal "bit"^^xsd:string ;
  rdfs:label "Bit aligned"^^xsd:string ;
.
qudt-type:BitField01
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf1"^^xsd:string ;
  qudt:bits "1"^^xsd:positiveInteger ;
  qudt:identifier "T010-01"^^xsd:string ;
  qudt:literal "B1"^^xsd:string ;
  qudt:mySQLName "BIT(1)"^^xsd:string ;
  qudt:rdfsDatatype qudt:BitField1 ;
  rdfs:label "Bit Field 01"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt-type:BitField02
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf2"^^xsd:string ;
  qudt:bits "2"^^xsd:positiveInteger ;
  qudt:code 182 ;
  qudt:identifier "T010-02"^^xsd:string ;
  qudt:literal "B2"^^xsd:string ;
  qudt:mySQLName "BIT(2)"^^xsd:string ;
  qudt:rdfsDatatype qudt:BitField2 ;
  rdfs:label "Bit Field 02"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt-type:BitField03
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf3"^^xsd:string ;
  qudt:bits "3"^^xsd:positiveInteger ;
  qudt:code 183 ;
  qudt:identifier "T010-03"^^xsd:string ;
  qudt:literal "B3"^^xsd:string ;
  qudt:mySQLName "BIT(3)"^^xsd:string ;
  qudt:rdfsDatatype qudt:BitField3 ;
  rdfs:label "Bit Field 03"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt-type:BitField04
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf4"^^xsd:string ;
  qudt:bits "4"^^xsd:positiveInteger ;
  qudt:code 184 ;
  qudt:identifier "T010-04"^^xsd:string ;
  qudt:literal "B4"^^xsd:string ;
  qudt:mySQLName "BIT(4)"^^xsd:string ;
  qudt:rdfsDatatype qudt:BitField4 ;
  rdfs:label "Bit Field 04"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt-type:BitField05
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf5"^^xsd:string ;
  qudt:bits "5"^^xsd:positiveInteger ;
  qudt:code 185 ;
  qudt:identifier "T010-05"^^xsd:string ;
  qudt:literal "B5"^^xsd:string ;
  qudt:mySQLName "BIT(5)"^^xsd:string ;
  qudt:rdfsDatatype qudt:BitField5 ;
  rdfs:label "Bit Field 05"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt-type:BitField06
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf6"^^xsd:string ;
  qudt:bits "6"^^xsd:positiveInteger ;
  qudt:code 186 ;
  qudt:identifier "T010-06"^^xsd:string ;
  qudt:literal "B6"^^xsd:string ;
  qudt:mySQLName "BIT(6)"^^xsd:string ;
  qudt:rdfsDatatype qudt:BitField6 ;
  rdfs:label "Bit Field 06"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt-type:BitField07
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf7"^^xsd:string ;
  qudt:bits "7"^^xsd:positiveInteger ;
  qudt:code 187 ;
  qudt:identifier "T010-07"^^xsd:string ;
  qudt:literal "B7"^^xsd:string ;
  qudt:mySQLName "BIT(7)"^^xsd:string ;
  qudt:rdfsDatatype qudt:BitField7 ;
  rdfs:label "Bit Field 07"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt-type:BitField08
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf8"^^xsd:string ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:code 188 ;
  qudt:identifier "T010-08"^^xsd:string ;
  qudt:literal "B8"^^xsd:string ;
  qudt:mySQLName "BIT(8)"^^xsd:string ;
  qudt:rdfsDatatype qudt:BitField8 ;
  rdfs:label "Bit Field 08"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt-type:BitField09
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf9"^^xsd:string ;
  qudt:bits "9"^^xsd:positiveInteger ;
  qudt:code 189 ;
  qudt:identifier "T010-09"^^xsd:string ;
  qudt:literal "B9"^^xsd:string ;
  qudt:mySQLName "BIT(9)"^^xsd:string ;
  qudt:rdfsDatatype qudt:BitField9 ;
  rdfs:label "Bit Field 09"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt-type:BitField10
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf10"^^xsd:string ;
  qudt:bitOrder qudt-type:BigEndian ;
  qudt:bits "10"^^xsd:positiveInteger ;
  qudt:byteOrder qudt-type:BigEndian ;
  qudt:code 190 ;
  qudt:identifier "T010-02"^^xsd:string ;
  qudt:literal "B10"^^xsd:string ;
  qudt:mySQLName "BIT(10)"^^xsd:string ;
  qudt:rdfsDatatype qudt:BitField10 ;
  rdfs:label "Bit Field 10"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt-type:BitField11
  rdf:type qudt:BitFieldType ;
  qudt:abbreviation "bf11"^^xsd:string ;
  qudt:bits "11"^^xsd:positiveInteger ;
  qudt:code 191 ;
  qudt:identifier "T010-11"^^xsd:string ;
  qudt:literal "B11"^^xsd:string ;
  qudt:mySQLName "BIT(11)"^^xsd:string ;
  qudt:rdfsDatatype qudt:BitField11 ;
  rdfs:label "Bit Field 11"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/bit-type.html> ;
.
qudt-type:BooleanEncoding
  rdf:type qudt:BooleanEncodingType ;
  rdfs:label "Boolean Encoding"^^xsd:string ;
.
qudt-type:BooleanTypeEnumeration
  rdf:type qudt:DiscreteStateEnumeration ;
  dc:description "The elements of the 'BooleanEnumeration' with two values, 'true' and 'false'."^^xsd:string ;
  qudt:code "1002"^^xsd:nonNegativeInteger ;
  qudt:value <http://qudt.org/schema/type#False> ;
  qudt:value <http://qudt.org/schema/type#True> ;
  rdfs:label "Boolean value"^^xsd:string ;
.
qudt-type:ByteAligned
  rdf:type qudt:AlignmentType ;
  qudt:literal "byte"^^xsd:string ;
  rdfs:label "Byte aligned"^^xsd:string ;
.
qudt-type:ByteOrderTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:code "1004"^^xsd:nonNegativeInteger ;
  qudt:defaultValue qudt-type:BigEndian ;
  qudt:value qudt-type:BigEndian ;
  qudt:value qudt-type:LittleEndian ;
  rdfs:label "Byte Order Type Enumeration"^^xsd:string ;
.
qudt-type:CC_EarthCentered
  rdf:type qudt:CoordinateCenterType ;
  qudt:literal "earthCentered"^^xsd:string ;
  rdfs:label "Earth centered"^^xsd:string ;
.
qudt-type:CC_MarsCentered
  rdf:type qudt:CoordinateCenterType ;
  qudt:literal "marsCentered"^^xsd:string ;
  rdfs:label "Mars centered"^^xsd:string ;
.
qudt-type:CC_MoonCentered
  rdf:type qudt:CoordinateCenterType ;
  qudt:literal "moonCentered"^^xsd:string ;
  rdfs:label "Moon centered"^^xsd:string ;
.
qudt-type:CC_SunCentered
  rdf:type qudt:CoordinateCenterType ;
  qudt:literal "sunCentered"^^xsd:string ;
  rdfs:label "Sun centered"^^xsd:string ;
.
qudt-type:CC_VehicleCentered
  rdf:type qudt:CoordinateCenterType ;
  qudt:literal "vehicleCentered"^^xsd:string ;
  rdfs:label "Vehicle centered"^^xsd:string ;
.
qudt-type:CDF
  rdf:type qudt:MultiDimensionalDataFormat ;
  dc:description "CDF (Common Data format), a data format for storing and manipulating scalar and multidimensional data in a platform and discipline independent manner, making interoperability between applications and tools easier. CDF provides device independent view of the CDF data model by software programming interface insulting developers from actual physical file format. CDF was developed by NASA, and is described at http://cdf.gsfc.nasa.gov/." ;
  rdfs:label "Common Data Format (CDF)"^^xsd:string ;
.
qudt-type:CHAR
  rdf:type qudt:CharacterType ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:encoding qudt-type:CharEncoding ;
  qudt:identifier "T001-01"^^xsd:string ;
  qudt:literal "char"^^xsd:string ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "CHAR"^^xsd:string ;
.
qudt-type:COORDS-2D-DOUBLE
  rdf:type qudt:Coordinates-2D-DoublePrecision ;
  qudt:elementType qudt-type:FLOAT-DP ;
  rdfs:label "COORDS-2D-DOUBLE"^^xsd:string ;
.
qudt-type:COORDS-2D-SINGLE
  rdf:type qudt:Coordinates-2D-SinglePrecision ;
  qudt:elementType qudt-type:FLOAT-SP ;
  qudt:elementTypeCount "2"^^xsd:nonNegativeInteger ;
  rdfs:label "COORDS-2D-SINGLE"^^xsd:string ;
.
qudt-type:COORDS-3D-DOUBLE
  rdf:type qudt:Coordinates-3D-DoublePrecision ;
  qudt:elementTypeCount "3"^^xsd:nonNegativeInteger ;
  rdfs:label "COORDS-3D-DOUBLE"^^xsd:string ;
.
qudt-type:COORDS-3D-SINGLE
  rdf:type qudt:Coordinates-3D-SinglePrecision ;
  rdfs:label "COORDS-3D-SINGLE"^^xsd:string ;
.
qudt-type:COORDS-RH-DP
  rdf:type qudt:Coordinates-3D-DoublePrecision ;
  dc:description "A three-dimensional coordinate system in which the axes satisfy the right-hand rule. "^^xsd:string ;
  rdfs:label "COORDS - RH DP"^^xsd:string ;
.
qudt-type:CalibratorTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:code "1006"^^xsd:nonNegativeInteger ;
  qudt:value <http://qudt.org/schema/type#EnumerationCalibrationType> ;
  qudt:value <http://qudt.org/schema/type#LineSegmentCalibrationType> ;
  qudt:value <http://qudt.org/schema/type#PolynomialCalibrationType> ;
  rdfs:label "Calibrator Type Enumeration"^^xsd:string ;
.
qudt-type:CharEncoding
  rdf:type qudt:BooleanEncodingType ;
  rdf:type qudt:CharEncodingType ;
  dc:description "7 bits of 1 octet" ;
  qudt:bytes "1"^^xsd:positiveInteger ;
  rdfs:label "Char Encoding"^^xsd:string ;
.
qudt-type:CompositeTABLE
  rdf:type qudt:CompositeTable ;
  rdfs:label "Composite table"^^xsd:string ;
.
qudt-type:CoordinateCenterTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:value qudt-type:CC_EarthCentered ;
  qudt:value qudt-type:CC_MarsCentered ;
  qudt:value qudt-type:CC_MoonCentered ;
  qudt:value qudt-type:CC_SunCentered ;
  qudt:value qudt-type:CC_VehicleCentered ;
  rdfs:label "Data Coordinate Center Type Enumeration"^^xsd:string ;
.
qudt-type:CoordinateSystemTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:value qudt-refdata:ECS_EC-EMEPM ;
  qudt:value qudt-refdata:ECS_EC-ETEPME ;
  qudt:value qudt-refdata:ECS_EC-ICRF ;
  qudt:value qudt-refdata:ECS_EC-ITRF ;
  qudt:value qudt-refdata:ECS_SC-ICRF ;
  qudt:value qudt-refdata:ECS_VC-ICRF ;
  qudt:value qudt-refdata:LCS_LC-LMEBF ;
  qudt:value qudt-refdata:LCS_LC-LPABF ;
  qudt:value qudt-refdata:MCS_MC-MMEIAUE ;
  qudt:value qudt-refdata:MCS_MC-MMEPMBF ;
  qudt:value qudt-refdata:NRIF_LPAE ;
  qudt:value qudt-refdata:TBRCS_EC-EMR ;
  qudt:value qudt-refdata:TBRCS_SC-SER ;
  qudt:value qudt-refdata:VCS_VC-LVC ;
  qudt:value qudt-refdata:VCS_VC-LVLH ;
  rdfs:label "Coordinate system type enumeration"^^xsd:string ;
.
qudt-type:DATE
  rdf:type qudt:DateStringType ;
  qudt:code 255 ;
  qudt:description "Provides the date expressed in year, month and day."^^xsd:string ;
  qudt:encodingDescription "YYYY:MM:DD, where YYYY is a 4 digit year, MM is a 2 digit month and DD is a 2 digit day."^^xsd:string ;
  qudt:identifier "T004-01"^^xsd:string ;
  qudt:literal "date"^^xsd:string ;
  qudt:rdfsDatatype xsd:dateTime ;
  rdfs:label "Date"^^xsd:string ;
.
qudt-type:DECIMAL
  rdf:type qudt:NumericType ;
  qudt:ansiSQLName "DECIMAL(p,s)"^^xsd:string ;
  qudt:code "101"^^xsd:nonNegativeInteger ;
  qudt:literal "numeric"^^xsd:string ;
  qudt:odbcName "SQL_DECIMAL(p,s)"^^xsd:string ;
  qudt:oracleSQLName "NUMBER(p,s)"^^xsd:string ;
  qudt:rdfsDatatype qudt:numericUnion ;
  rdfs:label "Decimal"^^xsd:string ;
.
qudt-type:DICTIONARY
  rdf:type qudt:Dictionary ;
  rdfs:label "DICTIONARY"^^xsd:string ;
.
qudt-type:DIGIT
  rdf:type qudt:CharacterType ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:identifier "T001-02"^^xsd:string ;
  qudt:literal "digit"^^xsd:string ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "DIGIT"^^xsd:string ;
.
qudt-type:DateDatatypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:code "1008"^^xsd:nonNegativeInteger ;
  qudt:value qudt-type:DATE ;
  qudt:value qudt-type:RELATIVE-DATETIME ;
  qudt:value qudt-type:UTC-DATETIME ;
  qudt:value qudt-type:UTC-DAYTIME ;
  qudt:value qudt-type:YDT ;
  rdfs:label "Date Datatype Enumeration"^^xsd:string ;
.
qudt-type:DoublePrecisionEncoding
  rdf:type qudt:FloatingPointEncodingType ;
  qudt:bytes "64"^^xsd:positiveInteger ;
  rdfs:label "Double Precision Encoding"^^xsd:string ;
.
qudt-type:ENUMERATION
  rdf:type qudt:Enumeration ;
  qudt:description "An enumeration is a set of literals from which a single value is selected. Each literal can have a tag as an integer within a standard encoding appropriate to the range of integer values. Enumerations are also subclasses of Scalar Datatype. This allows them to be used as the reference of a datatype specification."^^xsd:string ;
  qudt:literal "enumeration"^^xsd:string ;
  qudt:longDescription "An enumeration is a set of literals from which a single value is selected. Each literal can have a tag as an integer within a standard encoding appropriate to the range of integer values. Consistency of enumeration types will allow them, and the enumerated values, to be referred to unambiguously in all space systems either through symbolic name or encoding. Enumerated values are also controlled vocabularies and as such need to be standardized. Without this consistency enumeration literals can be stated differently and result in  data conflicts and misinterpretations. The tags are a set of positive whole numbers, not necessarily contiguous and having no numerical significance, each corresponding to the associated literal identifier. An order attribute can also be given on the enumeration elements. An enumeration can itself be a member of an enumeration. This allows enumerations to be enumerated in a selection. Enumerations are also subclasses of Scalar Datatype. This allows them to be used as the reference of a datatype specification."^^xsd:string ;
  rdfs:label "ENUMERATION"^^xsd:string ;
.
qudt-type:EarthCoordinateSystemTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:value qudt-refdata:ECS_EC-EMEPM ;
  qudt:value qudt-refdata:ECS_EC-ETEPME ;
  qudt:value qudt-refdata:ECS_EC-ICRF ;
  qudt:value qudt-refdata:ECS_EC-ITRF ;
  qudt:value qudt-refdata:ECS_SC-ICRF ;
  qudt:value qudt-refdata:ECS_VC-ICRF ;
  rdfs:label "Earth coordinate system type enumeration"^^xsd:string ;
.
qudt-type:EndianTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:value qudt-type:BigEndian ;
  qudt:value qudt-type:LittleEndian ;
  rdfs:label "Endian Type Enumeration"^^xsd:string ;
.
qudt-type:FLAG
  rdf:type qudt:BooleanType ;
  qudt:code "2"^^xsd:nonNegativeInteger ;
  qudt:identifier "T000-02"^^xsd:string ;
  qudt:literal "flag"^^xsd:string ;
  qudt:rdfsDatatype xsd:boolean ;
  rdfs:label "FLAG"^^xsd:string ;
.
qudt-type:FLOAT-DP
  rdf:type qudt:RealDoublePrecisionType ;
  qudt:abbreviation "F64"^^xsd:string ;
  qudt:ansiSQLName "DOUPLE PRECISION"^^xsd:string ;
  qudt:base "2"^^xsd:nonNegativeInteger ;
  qudt:bits "64"^^xsd:positiveInteger ;
  qudt:bytes "8"^^xsd:nonNegativeInteger ;
  qudt:code 405 ;
  qudt:description "A double precision floating point datatype.  Numbers of this type are stored using 64 bits, they require more memory than numbers of type single, which use 32 bits. However, because they are stored with more bits, numbers of type double are represented to more precision than numbers of type single. The double-precision (or double) data type is represented according to IEEE Standard 754 for double precision. A value is formatted with bit-fields for sign, mantissa and exponent."^^xsd:string ;
  qudt:encoding qudt-type:DoublePrecisionEncoding ;
  qudt:identifier "T006-03"^^xsd:string ;
  qudt:javaName "double"^^xsd:string ;
  qudt:jsName "double"^^xsd:string ;
  qudt:literal "double"^^xsd:string ;
  qudt:matlabName "double"^^xsd:string ;
  qudt:maxExclusive "(1-2^{-53}) \\times 2^{1024}"^^xsd:string ;
  qudt:maxExponent "1023"^^xsd:nonNegativeInteger ;
  qudt:maxMantissa 9007199254740991 ;
  qudt:microsoftSQLServerName "float"^^xsd:string ;
  qudt:minExclusive "-(1-2^{-53}) \\times 2^{1024}"^^xsd:string ;
  qudt:minMantissa -9007199254740991 ;
  qudt:mySQLName "DOUBLE"^^xsd:string ;
  qudt:octets "8"^^xsd:positiveInteger ;
  qudt:odbcName "SQL_DOUBLE"^^xsd:string ;
  qudt:oleDBName "DBTYPE_R8"^^xsd:string ;
  qudt:oracleSQLName "FLOAT(49)"^^xsd:string ;
  qudt:rdfsDatatype xsd:double ;
  rdfs:label "Double Precision Real"^^xsd:string ;
  owl:sameAs qudt-type:FLOAT_IEEE754-BINARY64 ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/floating-point-types.html> ;
  prov:wasInfluencedBy <http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html> ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Floating_point> ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/IEEE_floating_point> ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/aa275635(v=sql.80).aspx> ;
  prov:wasInfluencedBy <http://www.mathworks.com/help/matlab/matlab_prog/floating-point-numbers.html> ;
.
qudt-type:FLOAT-SP
  rdf:type qudt:RealSinglePrecisionType ;
  qudt:ansiSQLName "FLOAT"^^xsd:string ;
  qudt:bits "32"^^xsd:positiveInteger ;
  qudt:bytes "4"^^xsd:nonNegativeInteger ;
  qudt:cName "float"^^xsd:string ;
  qudt:description "A single precision real is a 32 bit signed floating point representation. Numbers of type single are stored using 32 bits, they require less memory than numbers of type double, which use 64 bits. However, because they are stored with fewer bits, numbers of type single are represented to less precision than numbers of type double."^^xsd:string ;
  qudt:encoding qudt-type:SinglePrecisionRealEncoding ;
  qudt:identifier "T006-01"^^xsd:string ;
  qudt:javaName "float"^^xsd:string ;
  qudt:jsName "float"^^xsd:string ;
  qudt:literal "single"^^xsd:string ;
  qudt:matlabName "single"^^xsd:string ;
  qudt:maxExclusive "(2-2^{-23}) \\times 2^{127}"^^xsd:string ;
  qudt:maxExponent "23"^^xsd:nonNegativeInteger ;
  qudt:microsoftSQLServerName "real"^^xsd:string ;
  qudt:minExclusive "-(2-2^{-23}) \\times 2^{127}"^^xsd:string ;
  qudt:mySQLName "FLOAT"^^xsd:string ;
  qudt:octets "4"^^xsd:positiveInteger ;
  qudt:odbcName "SQL_FLOAT"^^xsd:string ;
  qudt:oleDBName "DBTYPE_R4"^^xsd:string ;
  qudt:oracleSQLName "FLOAT(23)"^^xsd:string ;
  qudt:rdfsDatatype xsd:float ;
  rdfs:label "Single Precision Real"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/floating-point-types.html> ;
  prov:wasInfluencedBy <http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html> ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Floating_point> ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/aa275635(v=sql.80).aspx> ;
  prov:wasInfluencedBy <http://www-01.ibm.com/support/docview.wss?uid=swg21325957> ;
  prov:wasInfluencedBy <http://www.mathworks.com/help/matlab/matlab_prog/floating-point-numbers.html> ;
  prov:wasInfluencedBy <http://www.stanford.edu/dept/itss/docs/oracle/10g/server.101/b10764/apb.htm> ;
.
qudt-type:FLOAT_IEEE754-BINARY64
  rdf:type qudt:RealDoublePrecisionType ;
  qudt:base "2"^^xsd:nonNegativeInteger ;
  qudt:bits "64"^^xsd:positiveInteger ;
  qudt:description "IEEE-754 floating point datatype is a technical standar established in 1985 by the Institute of Electrical and Electronics Engineers (IEEE). Many hardware floating point units use the IEEE 754 standard.."^^xsd:string ;
  qudt:identifier "T006-05"^^xsd:string ;
  qudt:maxExponent "970"^^xsd:nonNegativeInteger ;
  qudt:maxMantissa 9007199254740991 ;
  qudt:minMantissa -9007199254740991 ;
  qudt:rdfsDatatype xsd:double ;
  rdfs:label "IEEE754 BINARY64"^^xsd:string ;
  owl:sameAs qudt-type:FLOAT-DP ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/IEEE_floating_point> ;
.
qudt-type:FT_INERTIAL
  rdf:type qudt:FrameType ;
  qudt:literal "inertial"^^xsd:string ;
  rdfs:label "Inertial"^^xsd:string ;
.
qudt-type:FT_NON-ROTATING
  rdf:type qudt:FrameType ;
  qudt:literal "nonrotating"^^xsd:string ;
  rdfs:label "Non rotating"^^xsd:string ;
.
qudt-type:FT_ROTATING
  rdf:type qudt:FrameType ;
  qudt:literal "rotating"^^xsd:string ;
  rdfs:label "Rotating"^^xsd:string ;
.
qudt-type:FileFormatEnumeration
  rdf:type qudt:Enumeration ;
  dc:description "The encoded form of a file's content such as ascii or binary."^^xsd:string ;
  qudt:code "1010"^^xsd:nonNegativeInteger ;
  qudt:value <http://qudt.org/schema/type#Ascii> ;
  qudt:value <http://qudt.org/schema/type#Binary> ;
  rdfs:label "File Format"^^xsd:string ;
.
qudt-type:GRAPH
  rdf:type qudt:Graph ;
  rdfs:label "GRAPH"^^xsd:string ;
.
qudt-type:GlobalPositionVector-DP
  rdf:type qudt:StateSpaceVector ;
  qudt:code "360"^^xsd:nonNegativeInteger ;
  qudt:dimension "3"^^xsd:positiveInteger ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:FLOAT-DP ;
  rdfs:label "Global Position Vector - double precision"^^xsd:string ;
.
qudt-type:HASH-TABLE
  rdf:type qudt:HashTable ;
  rdfs:label "Hash Table"^^xsd:string ;
.
qudt-type:HDF5
  rdf:type qudt:MultiDimensionalDataFormat ;
  dc:description "The Hierarchical Data Format (HDF) is a common data format and a collection of application programming libraries developed at the NSCA primarily for the scientific community and for the exchange of scientific datasets. The present version of HDF is HDF5 which offers a simple data model and application interfaces for encoding and exchanging data without the added burden of defining mappings to the underlying machine representations."^^xsd:string ;
  rdfs:label "HDF5"^^xsd:string ;
.
qudt-type:HDF6
  rdf:type qudt:MultiDimensionalDataFormat ;
  dc:description "A \"Hierarchical Data Format\"."^^xsd:string ;
  rdfs:label "HDF6"^^xsd:string ;
.
qudt-type:HEAP
  rdf:type qudt:Heap ;
  qudt:description "In computer science, a heap is a specialized tree-based data structure that satisfies the heap property: If A is a parent node of B then key(A) is ordered with respect to key(B) with the same ordering applying across the heap. Either the keys of parent nodes are always greater than or equal to those of the children and the highest key is in the root node (this kind of heap is called max heap) or the keys of parent nodes are less than or equal to those of the children and the least key is in the root node (min heap). The heap relation mentioned above applies only between nodes and their immediate parents. The maximum number of children each node can have depends on the type of heap, but in many types it is at most two, which is known as a \"binary heap\"."^^xsd:string ;
  rdfs:label "Heap"^^xsd:string ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Heap_(data_structure)> ;
.
qudt-type:HEXBINARY
  rdf:type qudt:HexBinaryType ;
  qudt:code "803"^^xsd:nonNegativeInteger ;
  qudt:literal "hexbinary"^^xsd:string ;
  qudt:rdfsDatatype qudt:hexbinary ;
  rdfs:label "HEXBINARY"^^xsd:string ;
.
qudt-type:HighToLow
  rdf:type qudt:MemoryOrderType ;
  qudt:literal "high"^^xsd:string ;
  rdfs:label "High to low"^^xsd:string ;
.
qudt-type:IEEE754_1985RealEncoding
  rdf:type qudt:FloatingPointEncodingType ;
  qudt:bytes "32"^^xsd:positiveInteger ;
  rdfs:label "IEEE 754 1985 Real Encoding"^^xsd:string ;
.
qudt-type:ISO8601-UTCDateTime-BasicFormat
  rdf:type qudt:DateTimeStringEncodingType ;
  qudt:allowedPattern "[0-9]{4}[0-9]{2}[0-9]{2}T[0-9]{2}[0-9]{2}[0-9]{2}.[0-9]+Z"^^xsd:string ;
  qudt:allowedPattern "[0-9]{4}[0-9]{2}[0-9]{2}T[0-9]{2}[0-9]{2}[0-9]{2}Z"^^xsd:string ;
  rdfs:label "ISO 8601 UTC Date Time - Basic Format"^^xsd:string ;
.
qudt-type:IntegerDataTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:code "1012"^^xsd:nonNegativeInteger ;
  qudt:description "An enumeration of CxDA integer data types. The members of this enumeration are integer scalar types as well as being enumeration literals."^^xsd:string ;
  qudt:value qudt-type:SIGNED-BIG-INTEGER ;
  qudt:value qudt-type:SIGNED-INTEGER ;
  qudt:value qudt-type:UNSIGNED-BIG-INTEGER ;
  qudt:value qudt-type:UNSIGNED-INTEGER ;
  qudt:value qudt-type:UNSIGNED-LONG-INTEGER ;
  qudt:value qudt-type:UNSIGNED-SHORT-INTEGER ;
  rdfs:label "Integer data type enumeration"^^xsd:string ;
.
qudt-type:InterpolatedTABLE
  rdf:type qudt:InterpolatedTable ;
  rdfs:label "Interpolated table"^^xsd:string ;
.
qudt-type:LETTER
  rdf:type qudt:CharacterType ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:identifier "T001-03"^^xsd:string ;
  qudt:literal "letter"^^xsd:string ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "LETTER"^^xsd:string ;
.
qudt-type:LIST
  rdf:type qudt:List ;
  rdfs:label "LIST"^^xsd:string ;
.
qudt-type:LittleEndian
  rdf:type qudt:EndianType ;
  qudt:code 2 ;
  qudt:literal "little"^^xsd:string ;
  rdfs:label "Little Endian"^^xsd:string ;
.
qudt-type:LocalCoordinateSystemTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:value qudt-refdata:VCS_VC-LVC ;
  qudt:value qudt-refdata:VCS_VC-LVLH ;
  rdfs:label "Local coordinate system type enumeration"^^xsd:string ;
.
qudt-type:LongUnsignedIntegerEncoding
  rdf:type qudt:IntegerEncodingType ;
  qudt:bytes "8"^^xsd:positiveInteger ;
  rdfs:label "Long Unsigned Integer Encoding"^^xsd:string ;
.
qudt-type:LowToHigh
  rdf:type qudt:MemoryOrderType ;
  qudt:literal "low"^^xsd:string ;
  rdfs:label "Low to high"^^xsd:string ;
.
qudt-type:LunarCoordinateSystemTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:value qudt-refdata:LCS_LC-LMEBF ;
  qudt:value qudt-refdata:LCS_LC-LPABF ;
  qudt:value qudt-refdata:NRIF_LPAE ;
  rdfs:label "Lunar coordinate system type enumeration"^^xsd:string ;
.
qudt-type:MAP
  rdf:type qudt:Map ;
  rdfs:label "MAP"^^xsd:string ;
.
qudt-type:MATRIX
  rdf:type qudt:Matrix ;
  qudt:code "300"^^xsd:nonNegativeInteger ;
  rdfs:label "MATRIX"^^xsd:string ;
.
qudt-type:MATRIX-4X4-FLOATDP
  rdf:type qudt:Matrix ;
  qudt:code "320"^^xsd:nonNegativeInteger ;
  qudt:dimensionality "2"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:FLOAT-DP ;
  qudt:hasDimensionVector [
      rdf:type qudt:DimensionVector ;
      rdf:first "4"^^xsd:int ;
      rdf:rest (
          "4"^^xsd:int
        ) ;
      rdfs:label "4 by 4 array"^^xsd:string ;
    ] ;
  qudt:typeMatrix <http://qudt.org/schema/type#TYPE-MATRIX-4x4-FLOATDP> ;
  rdfs:label "MATRIX-4 X 4 Double precision"^^xsd:string ;
.
qudt-type:Major
  rdf:type qudt:MajorMinorType ;
  qudt:code 2 ;
  qudt:literal "major"^^xsd:string ;
  qudt:order "2"^^xsd:int ;
  rdfs:label "Major"^^xsd:string ;
.
qudt-type:MajorMinorTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:value qudt-type:Major ;
  qudt:value qudt-type:Minor ;
  rdfs:label "Data Major Minor Type Enumeration"^^xsd:string ;
.
qudt-type:MarsCoordinateSystemTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:value qudt-refdata:MCS_MC-MMEIAUE ;
  qudt:value qudt-refdata:MCS_MC-MMEPMBF ;
  rdfs:label "Mars coordinate system type enumeration"^^xsd:string ;
.
qudt-type:MassPropertiesARRAY
  rdf:type qudt:MassPropertiesArray ;
  rdfs:label "Mass properties ARRAY"^^xsd:string ;
.
qudt-type:MassPropertiesStateVector-DP
  rdf:type qudt:TypeVector ;
  qudt:code "440"^^xsd:nonNegativeInteger ;
  qudt:dimension "4"^^xsd:positiveInteger ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:FLOAT-DP ;
  rdfs:label "Mass properties State Vector - double precision"^^xsd:string ;
.
qudt-type:Minor
  rdf:type qudt:MajorMinorType ;
  qudt:code 1 ;
  qudt:literal "minor"^^xsd:string ;
  qudt:order "1"^^xsd:int ;
  rdfs:label "Minor"^^xsd:string ;
.
qudt-type:NUMERIC
  rdf:type qudt:NumericType ;
  qudt:ansiSQLName "DECIMAL(p,s)"^^xsd:string ;
  qudt:code "101"^^xsd:nonNegativeInteger ;
  qudt:literal "numeric"^^xsd:string ;
  qudt:odbcName "SQL_DECIMAL(p,s)"^^xsd:string ;
  qudt:oracleSQLName "NUMBER(p,s)"^^xsd:string ;
  qudt:rdfsDatatype qudt:numericUnion ;
  rdfs:label "Numeric"^^xsd:string ;
.
qudt-type:NegativeX
  rdf:type qudt:AxialOrientationType ;
  qudt:code 1 ;
  qudt:literal "negativeX"^^xsd:string ;
  rdfs:label "Negative X"^^xsd:string ;
.
qudt-type:NegativeY
  rdf:type qudt:AxialOrientationType ;
  qudt:code 2 ;
  qudt:literal "negativeY"^^xsd:string ;
  rdfs:label "Negative Y"^^xsd:string ;
.
qudt-type:NegativeZ
  rdf:type qudt:AxialOrientationType ;
  qudt:code 3 ;
  qudt:literal "negativeZ"^^xsd:string ;
  rdfs:label "Negative Z"^^xsd:string ;
.
qudt-type:NetCDF
  rdf:type qudt:MultiDimensionalDataFormat ;
  dc:description "NetCDF (network Common Data Form) is a set of interfaces for array-oriented data access and a freely-distributed collection of data access libraries for C, Fortran, C++, Java, and other languages. The netCDF libraries support a machine-independent format for representing scientific data. Together, the interfaces, libraries, and format support the creation, access, and sharing of scientific data."^^xsd:string ;
  rdfs:label "NetCDF"^^xsd:string ;
.
qudt-type:OCTET
  rdf:type qudt:OctetType ;
  qudt:abbreviation "octet"^^xsd:string ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:bytes "1"^^xsd:nonNegativeInteger ;
  qudt:cName "Byte"^^xsd:string ;
  qudt:code "800"^^xsd:string ;
  qudt:encoding qudt-type:OctetEncoding ;
  qudt:identifier "T002-01"^^xsd:string ;
  qudt:literal "octet"^^xsd:string ;
  qudt:maxInclusive 255 ;
  qudt:minInclusive 0 ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "Octet"^^xsd:string ;
.
qudt-type:ORDERED-TREE
  rdf:type qudt:OrderedTree ;
  rdfs:label "Ordered Tree"^^xsd:string ;
.
qudt-type:OctetEncoding
  rdf:type qudt:BooleanEncodingType ;
  rdf:type qudt:ByteEncodingType ;
  qudt:bytes "1"^^xsd:positiveInteger ;
  rdfs:label "OCTET Encoding"^^xsd:string ;
.
qudt-type:OffOnStateTypeEnumeration
  rdf:type qudt:DiscreteStateEnumeration ;
  dc:description "A discrete state enumeration whose values are 'off' and 'on'. The 'off' value is encoded as a zero (0) and the 'on' value as a one (1)." ;
  qudt:code "1014"^^xsd:nonNegativeInteger ;
  qudt:value <http://qudt.org/schema/type#Off> ;
  qudt:value <http://qudt.org/schema/type#On> ;
  rdfs:label "Off/On State Type Enumeration"^^xsd:string ;
.
qudt-type:OnOffStateTypeEnumeration
  rdf:type qudt:DiscreteStateEnumeration ;
  dc:description "A discrete state enumeration whose values are 'off' and 'on'. The 'on' value is encoded as a zero (0) and the 'off' value as a one (1)." ;
  qudt:code "1016"^^xsd:nonNegativeInteger ;
  qudt:inverted "true"^^xsd:boolean ;
  qudt:value <http://qudt.org/schema/type#Off> ;
  qudt:value <http://qudt.org/schema/type#On> ;
  rdfs:label "On/Off State Type Enumeration"^^xsd:string ;
.
qudt-type:OrderedCOLLECTION
  rdf:type qudt:OrderedCollection ;
  rdfs:label "Ordered COLLECTION"^^xsd:string ;
.
qudt-type:PRIORITY-QUEUE
  rdf:type qudt:OrderedCollection ;
  qudt:description "A \\textit{Priority Queue }is an abstract data type which is like a regular queue or stack data structure, but where additionally each element has a \"priority\" associated with it. In a priority queue, an element with high priority is served before an element with low priority. If two elements have the same priority, they are served according to their order in the queue."^^xsd:string ;
  rdfs:label "Priority Queue"^^xsd:string ;
  rdfs:seeAlso qudt-type:HEAP ;
  prov:wasInfluencedBy <http://en.wikipedia.org/wiki/Priority_queue> ;
.
qudt-type:PadWithAny
  rdf:type qudt:PaddingType ;
  qudt:literal "none"^^xsd:string ;
  rdfs:label "Pad with any"^^xsd:string ;
.
qudt-type:PadWithOnes
  rdf:type qudt:PaddingType ;
  qudt:literal "ones"^^xsd:string ;
  rdfs:label "Pad with ones"^^xsd:string ;
.
qudt-type:PadWithZeros
  rdf:type qudt:PaddingType ;
  qudt:literal "zeros"^^xsd:string ;
  rdfs:label "Pad with zeros"^^xsd:string ;
.
qudt-type:PaddingTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:defaultValue qudt-type:PadWithAny ;
  qudt:value qudt-type:PadWithAny ;
  qudt:value qudt-type:PadWithOnes ;
  qudt:value qudt-type:PadWithZeros ;
  rdfs:label "Padding type enumeration"^^xsd:string ;
.
qudt-type:PartialArray
  rdf:type qudt:Array ;
  dc:description "A partial array is an Array with two attributes that define the starting and ending indices of the elements that are provided." ;
  rdfs:label "Partial Array"^^xsd:string ;
.
qudt-type:Pointer
  rdf:type qudt:ReferenceDatatype ;
  dc:description """A pointer is a programming language data type whose value refers directly to (or \"points to\") another value stored elsewhere in the computer memory using its address. A pointer references a value stored elsewhere in memory, and obtaining or requesting the value to which a pointer refers is called dereferencing the pointer. A pointer is a simple implementation of the general reference data type. Pointers to data improve performance for repetitive operations such as traversing string and tree structures, and pointers to functions are used for binding methods in Object-oriented programming and run-time linking to dynamic link libraries (DLLs).

While \"pointer\" has been used to refer to references in general, it more properly applies to data structures whose interface explicitly allows the pointer to be manipulated as a memory address."""^^xsd:string ;
  rdfs:label "Pointer"^^xsd:string ;
.
qudt-type:PositiveX
  rdf:type qudt:AxialOrientationType ;
  qudt:code 4 ;
  qudt:literal "positiveX"^^xsd:string ;
  rdfs:label "Positive X"^^xsd:string ;
.
qudt-type:PositiveY
  rdf:type qudt:AxialOrientationType ;
  qudt:code 5 ;
  qudt:literal "positiveY"^^xsd:string ;
  rdfs:label "Positive Y"^^xsd:string ;
.
qudt-type:PositiveZ
  rdf:type qudt:AxialOrientationType ;
  qudt:code 6 ;
  qudt:literal "positiveZ"^^xsd:string ;
  rdfs:label "Positive Z"^^xsd:string ;
.
qudt-type:QUEUE
  rdf:type qudt:OrderedCollection ;
  rdfs:label "Queue"^^xsd:string ;
.
qudt-type:QuaternionVector-DP
  rdf:type qudt:Vector ;
  qudt:code "340"^^xsd:nonNegativeInteger ;
  qudt:description """This vector type is intended to hold the (real-valued) coefficients to a quaternion number. That is, if V=[a,b,c,d] is a vector of datatype:QUATERNION-VECTOR, then the proper interpretation of this vector is with respect to the basis elements 1,i,j,k of the quaternion algebra. Specifically, the V corresponds to the quaternion v = a*1 + b*i + c*j + d*k. Note that for most computations, the quaternion basis elements will be replaced with their 4 X 4 dimensional matrix representations, which are elements of datatype:QuaternionBasisMatrix. In this case, the resulting quaternion will be a 4 X 4 dimensional matrix of the form:

a b c d
-b a -d c
-c d a -b
-d -c b a"""^^xsd:string ;
  qudt:dimension "4"^^xsd:positiveInteger ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:FLOAT-DP ;
  rdfs:label "Quaternion Vector - double precision"^^xsd:string ;
.
qudt-type:RELATIVE-DATETIME
  rdf:type qudt:DateStringType ;
  qudt:code "76"^^xsd:nonNegativeInteger ;
  qudt:description "Days and time relative to some Epoch"^^xsd:string ;
  qudt:encodingDescription "TBD"^^xsd:string ;
  qudt:identifier "T004-08"^^xsd:string ;
  qudt:literal "reldate"^^xsd:string ;
  rdfs:label "Relative date and time"^^xsd:string ;
.
qudt-type:RealDatatypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:code "1018"^^xsd:nonNegativeInteger ;
  qudt:value qudt-type:FLOAT-DP ;
  qudt:value qudt-type:FLOAT-SP ;
  rdfs:label "Real datatype enumeration"^^xsd:string ;
.
qudt-type:ReferenceFrameTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:value qudt-type:FT_INERTIAL ;
  qudt:value qudt-type:FT_NON-ROTATING ;
  qudt:value qudt-type:FT_ROTATING ;
  rdfs:label "Reference Frame Type Enumeration"^^xsd:string ;
.
qudt-type:SEQUENCE
  rdf:type qudt:Sequence ;
  rdfs:label "SEQUENCE"^^xsd:string ;
.
qudt-type:SET
  rdf:type qudt:Set ;
  rdfs:label "SET"^^xsd:string ;
.
qudt-type:SIGNED-BIG-INTEGER
  rdf:type qudt:SignedBigIntegerType ;
  qudt:abbreviation "SI64"^^xsd:string ;
  qudt:bits "64"^^xsd:positiveInteger ;
  qudt:code 109 ;
  qudt:description "The\\textit{Signed Big Integer}, (\\textit{long) in Java) data type is a 64-bit signed two's complement integer. It has a minimum value of -9,223,372,036,854,775,808 and a maximum value of 9,223,372,036,854,775,807 (inclusive). Use this data type when you need a range of values wider than those provided by int."^^xsd:string ;
  qudt:encoding qudt-type:LongUnsignedIntegerEncoding ;
  qudt:identifier "T002-02"^^xsd:string ;
  qudt:javaName "long"^^xsd:string ;
  qudt:literal "SI64"^^xsd:string ;
  qudt:matlabName "int64"^^xsd:string ;
  qudt:maxInclusive "2^63 -1"^^dtype:numericUnion ;
  qudt:minInclusive "- 2^63 -1"^^dtype:numericUnion ;
  qudt:mySQLName "BIGINT"^^xsd:string ;
  qudt:octets "8"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:long ;
  rdfs:label "Signed Big Integer"^^xsd:string ;
  prov:wasInfluencedBy <http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html> ;
  prov:wasInfluencedBy <http://docs.python.org/2/library/stdtypes.html> ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/4xwz0t37(v=vs.71).aspx> ;
  prov:wasInfluencedBy <http://www.mathworks.com/help/matlab/ref/int16.html> ;
.
qudt-type:SIGNED-INTEGER
  rdf:type qudt:SignedIntegerType ;
  qudt:abbreviation "SI16"^^xsd:string ;
  qudt:ansiSQLName "SMALLINT"^^xsd:string ;
  qudt:bits "16"^^xsd:positiveInteger ;
  qudt:bytes "2"^^xsd:nonNegativeInteger ;
  qudt:code 105 ;
  qudt:description "The \\textit{Signed Integer} or \\textit{short} data type is a 16-bit signed two's complement integer. It has a minimum value of -32,768 ( $-2^{15}$ ) and a maximum (inclusive) value of 32,767 ($2^{15}$). As with byte, the same guidelines apply: you can use a short to save memory in large arrays, in situations where the memory savings actually matters."^^xsd:string ;
  qudt:encoding qudt-type:ShortSignedIntegerEncoding ;
  qudt:identifier "T002-03"^^xsd:string ;
  qudt:javaName "short"^^xsd:string ;
  qudt:jsName "short"^^xsd:string ;
  qudt:literal "SI16"^^xsd:string ;
  qudt:matlabName "int16"^^xsd:string ;
  qudt:maxInclusive "32767" ;
  qudt:microsoftSQLServerName "smallint"^^xsd:string ;
  qudt:minInclusive "-32767" ;
  qudt:mySQLName "SMALLINT"^^xsd:string ;
  qudt:rdfsDatatype xsd:short ;
  rdfs:label "Signed Integer"^^xsd:string ;
  prov:wasInfluencedBy <http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html> ;
  prov:wasInfluencedBy <http://docs.python.org/2/library/stdtypes.html> ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/4xwz0t37(v=vs.71).aspx> ;
  prov:wasInfluencedBy <http://www.mathworks.com/help/matlab/ref/int16.html> ;
.
qudt-type:SIGNED-LONG-INTEGER
  rdf:type qudt:SignedLongIntegerType ;
  qudt:abbreviation "SI32"^^xsd:string ;
  qudt:ansiSQLName "INTEGER"^^xsd:string ;
  qudt:bits "32"^^xsd:positiveInteger ;
  qudt:bytes "4"^^xsd:nonNegativeInteger ;
  qudt:cName "int"^^xsd:string ;
  qudt:description "A \\textit{Signed Long Integer) is a 32 bit signed integer in 2's complement form.  It has a minimum value of -2,147,483,648 and a maximum value of 2,147,483,647 (inclusive). For integral values, this data type is generally the default choice unless there is a reason (like the above) to choose something else. This data type will most likely be large enough for the numbers your program will use, but if you need a wider range of values, use long instead."^^xsd:string ;
  qudt:identifier "T002-04"^^xsd:string ;
  qudt:javaName "int"^^xsd:string ;
  qudt:jsName "int"^^xsd:string ;
  qudt:literal "SI32"^^xsd:string ;
  qudt:matlabName "int32"^^xsd:string ;
  qudt:maxInclusive "2^31 - 1"^^dtype:numericUnion ;
  qudt:microsoftSQLServerName "integer"^^xsd:string ;
  qudt:minInclusive "-2^31 -1"^^dtype:numericUnion ;
  qudt:mySQLName "INT"^^xsd:string ;
  qudt:octets "4"^^xsd:positiveInteger ;
  qudt:odbcName "SQL_INTEGER"^^xsd:string ;
  qudt:oleDBName "DBTYPE_I4"^^xsd:string ;
  qudt:oracleSQLName "NUMBER(10)"^^xsd:string ;
  qudt:rdfsDatatype xsd:int ;
  qudt:signedness qudt-type:Signed ;
  rdfs:label "Signed Long Integer"^^xsd:string ;
  prov:wasInfluencedBy <http://docs.oracle.com/javase/tutorial/java/nutsandbolts/datatypes.html> ;
  prov:wasInfluencedBy <http://docs.python.org/2/library/stdtypes.html> ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/4xwz0t37(v=vs.71).aspx> ;
.
qudt-type:SIGNED-MEDIUM-INTEGER
  rdf:type qudt:SignedMediumIntegerType ;
  qudt:abbreviation "SI24"^^xsd:string ;
  qudt:bits "24"^^xsd:positiveInteger ;
  qudt:bytes "3"^^xsd:nonNegativeInteger ;
  qudt:maxInclusive "8388607"^^dtype:numericUnion ;
  qudt:minInclusive "-8388608"^^dtype:numericUnion ;
  qudt:mySQLName "MEDIUMINT"^^xsd:string ;
  rdfs:label "Signed Medium Integer"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/integer-types.html> ;
.
qudt-type:SIGNED-SHORT-INTEGER
  rdf:type qudt:SignedShortIntegerType ;
  qudt:abbreviation "SI8"^^xsd:string ;
  qudt:ansiSQLName "NUMERIC(3,0)"^^xsd:string ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:bytes "1"^^xsd:nonNegativeInteger ;
  qudt:code 103 ;
  qudt:description "Unsigned 8 bit integer."^^xsd:string ;
  qudt:encoding qudt-type:OctetEncoding ;
  qudt:identifier "T002-06"^^xsd:string ;
  qudt:literal "SI8"^^xsd:string ;
  qudt:maxInclusive "127" ;
  qudt:microsoftSQLServerName "tinyint"^^xsd:string ;
  qudt:minInclusive "-127" ;
  qudt:mySQLName "TINYINT"^^xsd:string ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:odbcName "SQL_TINYINT"^^xsd:string ;
  qudt:oleDBName "DBTYPE_I1"^^xsd:string ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "Signed Short Integer"^^xsd:string ;
.
qudt-type:STRUCT
  rdf:type qudt:CompositeDatatype ;
  dc:description "A struct is C's and C++'s notion of a composite type, a datatype that composes a fixed set of labeled fields or members. It is so called because of the struct keyword used in declaring them, which is short for structure or, more precisely, user-defined data structure. A struct declaration consists of a list of fields, each of which can have any type. The total storage required for a struct object is the sum of the storage requirements of all the fields, plus any internal padding. [Wikipedia]"^^xsd:string ;
  rdfs:label "STRUCT"^^xsd:string ;
.
qudt-type:ScalarDataTypesEnumeration
  rdf:type qudt:Enumeration ;
  qudt:code "1020"^^xsd:nonNegativeInteger ;
  rdfs:label "Scalar data types Enumeration"^^xsd:string ;
.
qudt-type:ScaleVector3D-DP
  rdf:type qudt:Vector ;
  qudt:code "350"^^xsd:nonNegativeInteger ;
  qudt:dimension "3"^^xsd:positiveInteger ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:FLOAT-DP ;
  rdfs:label "Scale 3D Vector - double precision"^^xsd:string ;
.
qudt-type:ShortSignedIntegerEncoding
  rdf:type qudt:IntegerEncodingType ;
  qudt:bytes "2"^^xsd:positiveInteger ;
  rdfs:label "Short Signed Integer Encoding"^^xsd:string ;
.
qudt-type:ShortUnsignedIntegerEncoding
  rdf:type qudt:BooleanEncodingType ;
  rdf:type qudt:IntegerEncodingType ;
  qudt:bytes "2"^^xsd:positiveInteger ;
  rdfs:label "Short Unsigned Integer Encoding"^^xsd:string ;
.
qudt-type:Signed
  rdf:type qudt:SignednessType ;
  qudt:literal "signed"^^xsd:string ;
  rdfs:label "Signed"^^xsd:string ;
.
qudt-type:SignedIntegerEncoding
  rdf:type qudt:IntegerEncodingType ;
  qudt:bytes "4"^^xsd:positiveInteger ;
  rdfs:label "Signed Integer Encoding"^^xsd:string ;
.
qudt-type:SignednessTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:value qudt-type:Signed ;
  qudt:value qudt-type:Unsigned ;
  rdfs:label "Signedness Type Enumeration"^^xsd:string ;
.
qudt-type:SinglePrecisionRealEncoding
  rdf:type qudt:FloatingPointEncodingType ;
  qudt:bytes "32"^^xsd:positiveInteger ;
  rdfs:label "Single Precision Real Encoding"^^xsd:string ;
.
qudt-type:Stack
  rdf:type qudt:OrderedCollection ;
  rdfs:label "Stack"^^xsd:string ;
.
qudt-type:StateSpaceMatrix-2X2-DP
  rdf:type qudt:StateSpaceMatrix ;
  qudt:code "321"^^xsd:nonNegativeInteger ;
  qudt:dimensionality "2"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:FLOAT-DP ;
  qudt:hasDimensionVector (
      "2"^^xsd:int
      "2"^^xsd:int
    ) ;
  rdfs:label "State space matrix 2 by 2 Double Precision"^^xsd:string ;
.
qudt-type:StateSpaceMatrix-2by4-FLOATDP
  rdf:type qudt:StateSpaceMatrix ;
  qudt:code "323"^^xsd:nonNegativeInteger ;
  qudt:dimensionality "2"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:FLOAT-DP ;
  qudt:hasDimensionVector (
      "2"^^xsd:int
      "4"^^xsd:int
    ) ;
  rdfs:label "State space matrix 2 by 4 Double Precision"^^xsd:string ;
.
qudt-type:StateSpaceMatrix-4X4-DP
  rdf:type qudt:StateSpaceMatrix ;
  qudt:code "327"^^xsd:nonNegativeInteger ;
  qudt:dimensionality "2"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:FLOAT-DP ;
  qudt:hasDimensionVector (
      "4"^^xsd:int
      "4"^^xsd:int
    ) ;
  rdfs:label "State space matrix 4 by 4 Double Precision"^^xsd:string ;
.
qudt-type:StateSpaceMatrix-4by2-DoublePrecision
  rdf:type qudt:StateSpaceMatrix ;
  qudt:code "325"^^xsd:nonNegativeInteger ;
  qudt:dimensionality "2"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:FLOAT-DP ;
  qudt:hasDimensionVector (
      "4"^^xsd:int
      "2"^^xsd:int
    ) ;
  rdfs:label "State space matrix 4 by 2 Double Precision"^^xsd:string ;
.
qudt-type:StateVector-DP
  rdf:type qudt:StateSpaceVector ;
  qudt:code "353"^^xsd:nonNegativeInteger ;
  qudt:dimension "3"^^xsd:positiveInteger ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:FLOAT-DP ;
  rdfs:label "State Vector Double Precision"^^xsd:string ;
.
qudt-type:StateVector-SP
  rdf:type qudt:StateSpaceVector ;
  qudt:code "351"^^xsd:nonNegativeInteger ;
  qudt:dimension "3"^^xsd:positiveInteger ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:FLOAT-SP ;
  rdfs:label "State Vector Single Precision"^^xsd:string ;
.
qudt-type:String10
  rdf:type qudt:StringUTF8 ;
  qudt:code 515 ;
  qudt:description "String made up of 10 UTF-8 characters"^^xsd:string ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:UTF8-CHAR ;
  qudt:encoding qudt-type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "10"^^xsd:int
    ) ;
  qudt:literal "str10"^^xsd:string ;
  qudt:maxLength "20"^^xsd:nonNegativeInteger ;
  qudt:octets "10"^^xsd:positiveInteger ;
  rdfs:label "String 10"^^xsd:string ;
.
qudt-type:String1024
  rdf:type qudt:StringUTF8 ;
  qudt:code 590 ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:UTF8-CHAR ;
  qudt:hasDimensionVector (
      "1024"^^xsd:int
    ) ;
  qudt:literal "str1024"^^xsd:string ;
  qudt:maxLength "1024"^^xsd:nonNegativeInteger ;
  qudt:octets "1024"^^xsd:positiveInteger ;
  rdfs:label "String1024"^^xsd:string ;
.
qudt-type:String15
  rdf:type qudt:StringUTF8 ;
  qudt:code 520 ;
  qudt:description "String made up of 15 UTF-8 characters"^^xsd:string ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:UTF8-CHAR ;
  qudt:encoding qudt-type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "15"^^xsd:int
    ) ;
  qudt:literal "str15"^^xsd:string ;
  qudt:maxLength "15"^^xsd:nonNegativeInteger ;
  qudt:octets "15"^^xsd:positiveInteger ;
  rdfs:label "String 15"^^xsd:string ;
.
qudt-type:String16
  rdf:type qudt:StringUTF8 ;
  dc:description "A 16-digit alphanumeric string."^^xsd:string ;
  rdfs:label "String16"^^xsd:string ;
.
qudt-type:String160
  rdf:type qudt:StringUTF8 ;
  qudt:code 560 ;
  qudt:description "String made up of 160 UTF-8 characters"^^xsd:string ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:UTF8-CHAR ;
  qudt:encoding qudt-type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "160"^^xsd:int
    ) ;
  qudt:literal "str160"^^xsd:string ;
  qudt:maxLength "160"^^xsd:nonNegativeInteger ;
  qudt:octets "160"^^xsd:positiveInteger ;
  rdfs:label "String 160"^^xsd:string ;
.
qudt-type:String20
  rdf:type qudt:StringUTF8 ;
  qudt:code 525 ;
  qudt:description "String made up of 20 UTF-8 characters"^^xsd:string ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:UTF8-CHAR ;
  qudt:encoding qudt-type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "20"^^xsd:int
    ) ;
  qudt:literal "str20"^^xsd:string ;
  qudt:maxLength "20"^^xsd:nonNegativeInteger ;
  qudt:octets "20"^^xsd:positiveInteger ;
  rdfs:label "String 20"^^xsd:string ;
.
qudt-type:String256
  rdf:type qudt:StringUTF8 ;
  qudt:code 570 ;
  qudt:description "String made up of 256 UTF-8 characters"^^xsd:string ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:UTF8-CHAR ;
  qudt:encoding qudt-type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "256"^^xsd:int
    ) ;
  qudt:literal "str256"^^xsd:string ;
  qudt:maxLength "256"^^xsd:nonNegativeInteger ;
  qudt:octets "256"^^xsd:positiveInteger ;
  rdfs:label "String 256"^^xsd:string ;
.
qudt-type:String4
  rdf:type qudt:StringUTF8 ;
  qudt:description "String made up of 4 UTF-8 characters"^^xsd:string ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:UTF8-CHAR ;
  qudt:encoding qudt-type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "4"^^xsd:int
    ) ;
  qudt:literal "str4"^^xsd:string ;
  qudt:maxLength "4"^^xsd:nonNegativeInteger ;
  qudt:octets "4"^^xsd:positiveInteger ;
  rdfs:label "String 4"^^xsd:string ;
.
qudt-type:String64
  rdf:type qudt:StringUTF8 ;
  qudt:code 515 ;
  qudt:description "String made up of 64 UTF-8 characters"^^xsd:string ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:elementType qudt-type:UTF8-CHAR ;
  qudt:encoding qudt-type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "64"^^xsd:int
    ) ;
  qudt:literal "str64"^^xsd:string ;
  qudt:maxLength "64"^^xsd:nonNegativeInteger ;
  qudt:octets "64"^^xsd:positiveInteger ;
  rdfs:label "String 64"^^xsd:string ;
.
qudt-type:String8
  rdf:type qudt:StringUTF8 ;
  qudt:code 510 ;
  qudt:description "String made up of 8 UTF-8 characters"^^xsd:string ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:encoding qudt-type:UTF8StringEncoding ;
  qudt:hasDimensionVector (
      "8"^^xsd:int
    ) ;
  qudt:literal "str8"^^xsd:string ;
  qudt:maxLength "8"^^xsd:nonNegativeInteger ;
  qudt:octets "8"^^xsd:positiveInteger ;
  rdfs:label "String 8"^^xsd:string ;
.
qudt-type:StringDataTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:code "1022"^^xsd:nonNegativeInteger ;
  qudt:value qudt-type:String10 ;
  qudt:value qudt-type:String1024 ;
  qudt:value qudt-type:String15 ;
  qudt:value qudt-type:String160 ;
  qudt:value qudt-type:String20 ;
  qudt:value qudt-type:String256 ;
  qudt:value qudt-type:String64 ;
  qudt:value qudt-type:String8 ;
  qudt:value qudt-type:UTF16STRING ;
  qudt:value qudt-type:UTF8STRING ;
  rdfs:label "String data type enumeration"^^xsd:string ;
.
qudt-type:TABLE
  rdf:type qudt:Table ;
  rdfs:label "TABLE"^^xsd:string ;
.
qudt-type:TABLE-2x4
  rdf:type qudt:Table ;
  qudt:byRow "true"^^xsd:boolean ;
  qudt:columns "4"^^xsd:positiveInteger ;
  qudt:dimensionality "2"^^xsd:positiveInteger ;
  qudt:hasDimensionVector (
      "2"^^xsd:int
      "4"^^xsd:int
    ) ;
  qudt:rows "2"^^xsd:positiveInteger ;
  rdfs:label "TABLE-2x4"^^xsd:string ;
.
qudt-type:TIME
  rdf:type qudt:TimeStringType ;
  dc:description "Time in hh:mm:ss[Z|(+|-)hh:mm]format."^^xsd:string ;
  qudt:code "68"^^xsd:nonNegativeInteger ;
  qudt:identifier "T004-12"^^xsd:string ;
  qudt:literal "time"^^xsd:string ;
  qudt:rdfsDatatype xsd:time ;
  rdfs:label "TIME" ;
.
qudt-type:TREE
  rdf:type qudt:Tree ;
  rdfs:label "TREE"^^xsd:string ;
.
qudt-type:TYPE-MATRIX-4by4-FLOATDP
  rdf:type qudt:TypeList ;
  rdfs:label "TYPE-MATRIX-4by4-FLOATDP"^^xsd:string ;
.
qudt-type:TextString100
  rdf:type qudt:TextStringType ;
  qudt:maxLength "100"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string100"^^xsd:string ;
.
qudt-type:TextString12
  rdf:type qudt:TextStringType ;
  qudt:maxLength "12"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string12"^^xsd:string ;
.
qudt-type:TextString18
  rdf:type qudt:TextStringType ;
  qudt:maxLength "18"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string18"^^xsd:string ;
.
qudt-type:TextString250
  rdf:type qudt:TextStringType ;
  qudt:maxLength "250"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string250"^^xsd:string ;
.
qudt-type:TextString256
  rdf:type qudt:TextStringType ;
  qudt:maxLength "256"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string256"^^xsd:string ;
.
qudt-type:TextString30
  rdf:type qudt:TextStringType ;
  qudt:maxLength "30"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string30"^^xsd:string ;
.
qudt-type:TextString40
  rdf:type qudt:TextStringType ;
  qudt:maxLength "40"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string40"^^xsd:string ;
.
qudt-type:TextString50
  rdf:type qudt:TextStringType ;
  qudt:maxLength "50"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string50"^^xsd:string ;
.
qudt-type:TextString56
  rdf:type qudt:TextStringType ;
  qudt:maxLength "56"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string56"^^xsd:string ;
.
qudt-type:TextString8
  rdf:type qudt:TextStringType ;
  qudt:maxLength "8"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string8"^^xsd:string ;
.
qudt-type:TextString80
  rdf:type qudt:TextStringType ;
  qudt:maxLength "80"^^xsd:nonNegativeInteger ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Text string80"^^xsd:string ;
.
qudt-type:ThreeBodyRotatingCoordinateSystemTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:value qudt-refdata:TBRCS_EC-EMR ;
  qudt:value qudt-refdata:TBRCS_SC-SER ;
  rdfs:label "Three body rotating coordinate system type enumeration"^^xsd:string ;
.
qudt-type:UNARY-FUNCTION
  rdf:type qudt:FunctionDatatype ;
  qudt:description "This type identifies functions that have exactly one argument."^^xsd:string ;
  qudt:functionArity "1"^^xsd:nonNegativeInteger ;
  rdfs:label "UNARY-FUNCTION"^^xsd:string ;
.
qudt-type:UNSIGNED-BIG-INTEGER
  rdf:type qudt:UnsignedBigIntegerType ;
  qudt:abbreviation "UI64"^^xsd:string ;
  qudt:bits "64"^^xsd:positiveInteger ;
  qudt:code 117 ;
  qudt:identifier "T002-08"^^xsd:string ;
  qudt:literal "UI64"^^xsd:string ;
  qudt:maxInclusive "2^64 -1"^^dtype:numericUnion ;
  qudt:minInclusive "0" ;
  qudt:mySQLName "BIGINT"^^xsd:string ;
  qudt:octets "8"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:unsignedLong ;
  rdfs:label "Unsigned Big Integer"^^xsd:string ;
.
qudt-type:UNSIGNED-INTEGER
  rdf:type qudt:UnsignedIntegerType ;
  qudt:abbreviation "UI16"^^xsd:string ;
  qudt:bits "16"^^xsd:positiveInteger ;
  qudt:code 113 ;
  qudt:description "An unsigned 16-bit integer in the range 0 to 65,535"^^xsd:string ;
  qudt:identifier "T002-09"^^xsd:string ;
  qudt:literal "UI16"^^xsd:string ;
  qudt:maxInclusive "65535" ;
  qudt:microsoftSQLServerName "smallint"^^xsd:string ;
  qudt:minInclusive "0" ;
  qudt:mySQLName "SMALLINT"^^xsd:string ;
  qudt:rdfsDatatype xsd:unsignedShort ;
  rdfs:label "Unsigned Integer"^^xsd:string ;
.
qudt-type:UNSIGNED-LONG-INTEGER
  rdf:type qudt:UnsignedLongIntegerType ;
  qudt:abbreviation "UI32"^^xsd:string ;
  qudt:bits "32"^^xsd:positiveInteger ;
  qudt:code 115 ;
  qudt:encoding qudt-type:UnsignedIntegerEncoding ;
  qudt:identifier "T002-10"^^xsd:string ;
  qudt:literal "UI32"^^xsd:string ;
  qudt:maxInclusive "2^{32}"^^dtype:numericUnion ;
  qudt:minInclusive "0" ;
  qudt:mySQLName "INT"^^xsd:string ;
  qudt:octets "4"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:unsignedInt ;
  rdfs:label "Unsigned Long Integer"^^xsd:string ;
.
qudt-type:UNSIGNED-MEDIUM-INTEGER
  rdf:type qudt:UnsignedMediumIntegerType ;
  qudt:abbreviation "UI24"^^xsd:string ;
  qudt:bits "24"^^xsd:positiveInteger ;
  qudt:bytes "3"^^xsd:nonNegativeInteger ;
  qudt:maxInclusive "8388607"^^dtype:numericUnion ;
  qudt:minInclusive "-8388608"^^dtype:numericUnion ;
  qudt:mySQLName "MEDIUMINT"^^xsd:string ;
  rdfs:label "Unsigned Medium Integer"^^xsd:string ;
  prov:wasInfluencedBy <http://dev.mysql.com/doc/refman/5.0/en/integer-types.html> ;
.
qudt-type:UNSIGNED-SHORT-INTEGER
  rdf:type qudt:OctetType ;
  qudt:abbreviation "UI8"^^xsd:string ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:code 111 ;
  qudt:identifier "T002-13"^^xsd:string ;
  qudt:literal "UI8"^^xsd:string ;
  qudt:maxInclusive 255 ;
  qudt:microsoftSQLServerName "tinyint"^^xsd:string ;
  qudt:minInclusive 0 ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:oleDBName "DBTYPE_UI1"^^xsd:string ;
  qudt:rdfsDatatype xsd:unsignedByte ;
  rdfs:label "Unsigned Short Integer"^^xsd:string ;
  prov:wasInfluencedBy <http://msdn.microsoft.com/en-us/library/aa275635(v=sql.80).aspx> ;
.
qudt-type:UTC-DATETIME
  rdf:type qudt:DateStringType ;
  qudt:code "78"^^xsd:nonNegativeInteger ;
  qudt:description "UTC is the time-scale maintained by the BIPM, with assistance from the IERS, which forms the basis of a coordinated dissemination of standard frequencies and time signals. It corresponds exactly in rate with  the international reference scale of atomic time (TAI) but differs from it by an integer number of seconds.  TAI, based on the second (SI), as realized on the rotating geoid, is formed by the BIPM on the basis of clock data supplied by cooperating establishments. It is in the form of a continuous scale, e.g. in days, hours, minutes and seconds from the origin 1 January, 1958 (adopted by the CGPM 1971). "^^xsd:string ;
  qudt:encodingDescription "YYYY-MM-DDThh:mm:ss[.dd] or YYYY-DDDThh:mm:ss[.dd], where 'YYYY' is the year, 'MM' is the two-digit month, 'DD' is the two-digit day, 'DDD' is the three digit day of year, 'T' is constant, 'hh:mm:ss[.dd]' is the UTC time in hours, minutes, seconds, and optional fractional seconds. As many 'd' characters to the right of the period as required may be used to obtain the required precision. All fields require leading zeros."^^xsd:string ;
  qudt:identifier "T004-13"^^xsd:string ;
  qudt:literal "utc-date"^^xsd:string ;
  qudt:rdfsDatatype xsd:dateTime ;
  rdfs:label "UTC Date Time"^^xsd:string ;
.
qudt-type:UTC-DAYTIME
  rdf:type qudt:DateStringType ;
  qudt:code "79"^^xsd:nonNegativeInteger ;
  qudt:encodingDescription "YYYY-DDDThh:mm:ss.ddZ, where each character is an ASCII character using one octet with the following meanings: YYYY = Year in four-character subfield with values 0001-9999, DDD = Day of year in three-character subfield with values 001-365 or -366, T =  Calendar-Time separator, hh = Hour in two-character subfield with values 00-23,  mm = Minute in two-character subfield with values 00-59, ss = Second in two-character subfield with values 00-59 (-58 or -60 during leap seconds), dd = Decimal fraction of second in one- to n-character subfield, each d has values 0-9, and Z = time code terminator (optional)"^^xsd:string ;
  qudt:identifier "T004-14"^^xsd:string ;
  qudt:literal "utc-dayTime"^^xsd:string ;
  qudt:rdfsDatatype qudt:UTC-DayTime ;
  rdfs:label "UTC DAY TIME"^^xsd:string ;
.
qudt-type:UTF16-CHAR
  rdf:type qudt:CharacterType ;
  qudt:bits "16"^^xsd:positiveInteger ;
  qudt:code 150 ;
  qudt:identifier "T001-04"^^xsd:string ;
  qudt:literal "utf16"^^xsd:string ;
  qudt:octets "2"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:short ;
  rdfs:label "UTF16 CHAR"^^xsd:string ;
.
qudt-type:UTF16STRING
  rdf:type qudt:StringUTF16 ;
  qudt:code 600 ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:encoding qudt-type:UTF16StringEncoding ;
  qudt:literal "utf16"^^xsd:string ;
  rdfs:label "UTF-16 String"^^xsd:string ;
.
qudt-type:UTF16StringEncoding
  rdf:type qudt:StringEncodingType ;
  rdfs:label "UTF-16 String"^^xsd:string ;
.
qudt-type:UTF8-CHAR
  rdf:type qudt:CharacterType ;
  qudt:bits "8"^^xsd:positiveInteger ;
  qudt:code 122 ;
  qudt:identifier "T001-05"^^xsd:string ;
  qudt:literal "utf8"^^xsd:string ;
  qudt:octets "1"^^xsd:positiveInteger ;
  qudt:rdfsDatatype xsd:byte ;
  rdfs:label "UTF8 CHAR"^^xsd:string ;
.
qudt-type:UTF8STRING
  rdf:type qudt:StringUTF8 ;
  qudt:code 500 ;
  qudt:description "String consisting of UTF-8 characters"^^xsd:string ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  qudt:encoding qudt-type:UTF8StringEncoding ;
  qudt:literal "utf8"^^xsd:string ;
  rdfs:label "UTF-8 String"^^xsd:string ;
.
qudt-type:UTF8StringEncoding
  rdf:type qudt:StringEncodingType ;
  qudt:bytes "8"^^xsd:positiveInteger ;
  rdfs:label "UTF-8 Encoding"^^xsd:string ;
.
qudt-type:Unsigned
  rdf:type qudt:SignednessType ;
  qudt:literal "unsigned"^^xsd:string ;
  rdfs:label "Unsigned"^^xsd:string ;
.
qudt-type:UnsignedIntegerEncoding
  rdf:type qudt:IntegerEncodingType ;
  qudt:bytes "4"^^xsd:positiveInteger ;
  rdfs:label "Unsigned Integer Encoding"^^xsd:string ;
.
qudt-type:VECTOR
  rdf:type qudt:Vector ;
  qudt:code "450"^^xsd:nonNegativeInteger ;
  qudt:dimensionality "1"^^xsd:positiveInteger ;
  rdfs:label "VECTOR"^^xsd:string ;
.
qudt-type:WetDryStateTypeEnumeration
  rdf:type qudt:DiscreteStateEnumeration ;
  dc:description "A discrete state enumeration whose values are 'wet' and 'dry'. The 'dry' value is encoded as a zero (0) and the 'wet' value as a one (1)." ;
  qudt:code "1024"^^xsd:nonNegativeInteger ;
  qudt:value <http://qudt.org/schema/type#Dry> ;
  qudt:value <http://qudt.org/schema/type#Wet> ;
  rdfs:label "Wet Dry State Type Enumeration"^^xsd:string ;
.
qudt-type:WordAligned
  rdf:type qudt:AlignmentType ;
  qudt:literal "word"^^xsd:string ;
  rdfs:label "Word aligned"^^xsd:string ;
.
qudt-type:YDT
  rdf:type qudt:DateStringType ;
  qudt:code 215 ;
  qudt:encodingDescription "TBD"^^xsd:string ;
  qudt:identifier "T004-16"^^xsd:string ;
  qudt:literal "YDT"^^xsd:string ;
  qudt:rdfsDatatype xsd:string ;
  rdfs:label "Year Day Time"^^xsd:string ;
.
qudt-type:YesNoTypeEnumeration
  rdf:type qudt:Enumeration ;
  qudt:value <http://qudt.org/schema/type#No> ;
  qudt:value <http://qudt.org/schema/type#Yes> ;
  rdfs:label "Yes no type enumeration"^^xsd:string ;
.
